Prefix(dc:=<http://purl.org/dc/terms/>)
Prefix(ns1:=<http://schema.org/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(
Declaration(Class(ns1:AboutPage))
Declaration(Class(ns1:AccountingService))
Declaration(Class(ns1:AdministrativeArea))
Declaration(Class(ns1:AdultEntertainment))
Declaration(Class(ns1:AggregateOffer))
Declaration(Class(ns1:AggregateRating))
Declaration(Class(ns1:Airport))
Declaration(Class(ns1:AmusementPark))
Declaration(Class(ns1:AnimalShelter))
Declaration(Class(ns1:ApartmentComplex))
Declaration(Class(ns1:Aquarium))
Declaration(Class(ns1:ArtGallery))
Declaration(Class(ns1:Article))
Declaration(Class(ns1:Attorney))
Declaration(Class(ns1:AudioObject))
Declaration(Class(ns1:AutoBodyShop))
Declaration(Class(ns1:AutoDealer))
Declaration(Class(ns1:AutoPartsStore))
Declaration(Class(ns1:AutoRental))
Declaration(Class(ns1:AutoRepair))
Declaration(Class(ns1:AutoWash))
Declaration(Class(ns1:AutomatedTeller))
Declaration(Class(ns1:AutomotiveBusiness))
Declaration(Class(ns1:Bakery))
Declaration(Class(ns1:BankOrCreditUnion))
Declaration(Class(ns1:BarOrPub))
Declaration(Class(ns1:Beach))
Declaration(Class(ns1:BeautySalon))
Declaration(Class(ns1:BedAndBreakfast))
Declaration(Class(ns1:BikeStore))
Declaration(Class(ns1:Blog))
Declaration(Class(ns1:BlogPosting))
Declaration(Class(ns1:BodyOfWater))
Declaration(Class(ns1:Book))
Declaration(Class(ns1:BookFormatType))
Declaration(Class(ns1:BookStore))
Declaration(Class(ns1:Boolean))
Declaration(Class(ns1:BowlingAlley))
Declaration(Class(ns1:Brewery))
Declaration(Class(ns1:BuddhistTemple))
Declaration(Class(ns1:BusStation))
Declaration(Class(ns1:BusStop))
Declaration(Class(ns1:BusinessEvent))
Declaration(Class(ns1:CafeOrCoffeeShop))
Declaration(Class(ns1:Campground))
Declaration(Class(ns1:Canal))
Declaration(Class(ns1:Casino))
Declaration(Class(ns1:CatholicChurch))
Declaration(Class(ns1:Cemetery))
Declaration(Class(ns1:CheckoutPage))
Declaration(Class(ns1:ChildCare))
Declaration(Class(ns1:ChildrensEvent))
Declaration(Class(ns1:Church))
Declaration(Class(ns1:City))
Declaration(Class(ns1:CityHall))
Declaration(Class(ns1:CivicStructure))
Declaration(Class(ns1:ClothingStore))
Declaration(Class(ns1:CollectionPage))
Declaration(Class(ns1:CollegeOrUniversity))
Declaration(Class(ns1:ComedyClub))
Declaration(Class(ns1:ComedyEvent))
Declaration(Class(ns1:Comment))
Declaration(Class(ns1:ComputerStore))
Declaration(Class(ns1:ContactPage))
Declaration(Class(ns1:ContactPoint))
Declaration(Class(ns1:Continent))
Declaration(Class(ns1:ConvenienceStore))
Declaration(Class(ns1:Corporation))
Declaration(Class(ns1:Country))
Declaration(Class(ns1:Courthouse))
Declaration(Class(ns1:CreativeWork))
Declaration(Class(ns1:Crematorium))
Declaration(Class(ns1:DanceEvent))
Declaration(Class(ns1:DanceGroup))
Declaration(Class(ns1:DataType))
Declaration(Class(ns1:Date))
Declaration(Class(ns1:DaySpa))
Declaration(Class(ns1:DefenceEstablishment))
Declaration(Class(ns1:Dentist))
Declaration(Class(ns1:DepartmentStore))
Declaration(Class(ns1:Distance))
Declaration(Class(ns1:DryCleaningOrLaundry))
Declaration(Class(ns1:Duration))
Declaration(Class(ns1:EducationEvent))
Declaration(Class(ns1:EducationalOrganization))
Declaration(Class(ns1:Electrician))
Declaration(Class(ns1:ElectronicsStore))
Declaration(Class(ns1:ElementarySchool))
Declaration(Class(ns1:Embassy))
Declaration(Class(ns1:EmergencyService))
Declaration(Class(ns1:EmploymentAgency))
Declaration(Class(ns1:Energy))
Declaration(Class(ns1:EntertainmentBusiness))
Declaration(Class(ns1:Enumeration))
Declaration(Class(ns1:Event))
Declaration(Class(ns1:EventVenue))
Declaration(Class(ns1:ExerciseGym))
Declaration(Class(ns1:FastFoodRestaurant))
Declaration(Class(ns1:Festival))
Declaration(Class(ns1:FinancialService))
Declaration(Class(ns1:FireStation))
Declaration(Class(ns1:Float))
Declaration(Class(ns1:Florist))
Declaration(Class(ns1:FoodEstablishment))
Declaration(Class(ns1:FoodEvent))
Declaration(Class(ns1:FurnitureStore))
Declaration(Class(ns1:GardenStore))
Declaration(Class(ns1:GasStation))
Declaration(Class(ns1:GatedResidenceCommunity))
Declaration(Class(ns1:GeneralContractor))
Declaration(Class(ns1:GeoCoordinates))
Declaration(Class(ns1:GeoShape))
Declaration(Class(ns1:GolfCourse))
Declaration(Class(ns1:GovernmentBuilding))
Declaration(Class(ns1:GovernmentOffice))
Declaration(Class(ns1:GovernmentOrganization))
Declaration(Class(ns1:GroceryStore))
Declaration(Class(ns1:HVACBusiness))
Declaration(Class(ns1:HairSalon))
Declaration(Class(ns1:HardwareStore))
Declaration(Class(ns1:HealthAndBeautyBusiness))
Declaration(Class(ns1:HealthClub))
Declaration(Class(ns1:HighSchool))
Declaration(Class(ns1:HinduTemple))
Declaration(Class(ns1:HobbyShop))
Declaration(Class(ns1:HomeAndConstructionBusiness))
Declaration(Class(ns1:HomeGoodsStore))
Declaration(Class(ns1:Hospital))
Declaration(Class(ns1:Hostel))
Declaration(Class(ns1:Hotel))
Declaration(Class(ns1:HousePainter))
Declaration(Class(ns1:IceCreamShop))
Declaration(Class(ns1:ImageGallery))
Declaration(Class(ns1:ImageObject))
Declaration(Class(ns1:InsuranceAgency))
Declaration(Class(ns1:Intangible))
Declaration(Class(ns1:Integer))
Declaration(Class(ns1:InternetCafe))
Declaration(Class(ns1:ItemAvailability))
Declaration(Class(ns1:ItemList))
Declaration(Class(ns1:ItemPage))
Declaration(Class(ns1:JewelryStore))
Declaration(Class(ns1:JobPosting))
Declaration(Class(ns1:LakeBodyOfWater))
Declaration(Class(ns1:Landform))
Declaration(Class(ns1:LandmarksOrHistoricalBuildings))
Declaration(Class(ns1:Language))
Declaration(Class(ns1:LegislativeBuilding))
Declaration(Class(ns1:Library))
Declaration(Class(ns1:LiquorStore))
Declaration(Class(ns1:LiteraryEvent))
Declaration(Class(ns1:LocalBusiness))
Declaration(Class(ns1:Locksmith))
Declaration(Class(ns1:LodgingBusiness))
Declaration(Class(ns1:Map))
Declaration(Class(ns1:Mass))
Declaration(Class(ns1:MediaObject))
Declaration(Class(ns1:MedicalClinic))
Declaration(Class(ns1:MedicalOrganization))
Declaration(Class(ns1:MensClothingStore))
Declaration(Class(ns1:MiddleSchool))
Declaration(Class(ns1:MobileApplication))
Declaration(Class(ns1:MobilePhoneStore))
Declaration(Class(ns1:Mosque))
Declaration(Class(ns1:Motel))
Declaration(Class(ns1:MotorcycleDealer))
Declaration(Class(ns1:MotorcycleRepair))
Declaration(Class(ns1:Mountain))
Declaration(Class(ns1:Movie))
Declaration(Class(ns1:MovieRentalStore))
Declaration(Class(ns1:MovieTheater))
Declaration(Class(ns1:MovingCompany))
Declaration(Class(ns1:Museum))
Declaration(Class(ns1:MusicAlbum))
Declaration(Class(ns1:MusicEvent))
Declaration(Class(ns1:MusicGroup))
Declaration(Class(ns1:MusicPlaylist))
Declaration(Class(ns1:MusicRecording))
Declaration(Class(ns1:MusicStore))
Declaration(Class(ns1:MusicVenue))
Declaration(Class(ns1:MusicVideoObject))
Declaration(Class(ns1:NGO))
Declaration(Class(ns1:NailSalon))
Declaration(Class(ns1:NewsArticle))
Declaration(Class(ns1:NightClub))
Declaration(Class(ns1:Notary))
Declaration(Class(ns1:Number))
Declaration(Class(ns1:NutritionInformation))
Declaration(Class(ns1:OceanBodyOfWater))
Declaration(Class(ns1:Offer))
Declaration(Class(ns1:OfferItemCondition))
Declaration(Class(ns1:OfficeEquipmentStore))
Declaration(Class(ns1:Optician))
Declaration(Class(ns1:Organization))
Declaration(Class(ns1:OutletStore))
Declaration(Class(ns1:Painting))
Declaration(Class(ns1:Park))
Declaration(Class(ns1:ParkingFacility))
Declaration(Class(ns1:PawnShop))
Declaration(Class(ns1:PerformingArtsTheater))
Declaration(Class(ns1:PerformingGroup))
Declaration(Class(ns1:Person))
Declaration(Class(ns1:PetStore))
Declaration(Class(ns1:Pharmacy))
Declaration(Class(ns1:Photograph))
Declaration(Class(ns1:Physician))
Declaration(Class(ns1:Place))
Declaration(Class(ns1:PlaceOfWorship))
Declaration(Class(ns1:Playground))
Declaration(Class(ns1:Plumber))
Declaration(Class(ns1:PoliceStation))
Declaration(Class(ns1:Pond))
Declaration(Class(ns1:PostOffice))
Declaration(Class(ns1:PostalAddress))
Declaration(Class(ns1:Preschool))
Declaration(Class(ns1:Product))
Declaration(Class(ns1:ProfessionalService))
Declaration(Class(ns1:ProfilePage))
Declaration(Class(ns1:PublicSwimmingPool))
Declaration(Class(ns1:Quantity))
Declaration(Class(ns1:RVPark))
Declaration(Class(ns1:RadioStation))
Declaration(Class(ns1:Rating))
Declaration(Class(ns1:RealEstateAgent))
Declaration(Class(ns1:Recipe))
Declaration(Class(ns1:RecyclingCenter))
Declaration(Class(ns1:Reservoir))
Declaration(Class(ns1:Residence))
Declaration(Class(ns1:Restaurant))
Declaration(Class(ns1:Review))
Declaration(Class(ns1:RiverBodyOfWater))
Declaration(Class(ns1:RoofingContractor))
Declaration(Class(ns1:SaleEvent))
Declaration(Class(ns1:ScholarlyArticle))
Declaration(Class(ns1:School))
Declaration(Class(ns1:Sculpture))
Declaration(Class(ns1:SeaBodyOfWater))
Declaration(Class(ns1:SearchResultsPage))
Declaration(Class(ns1:SelfStorage))
Declaration(Class(ns1:ShoeStore))
Declaration(Class(ns1:ShoppingCenter))
Declaration(Class(ns1:SingleFamilyResidence))
Declaration(Class(ns1:SiteNavigationElement))
Declaration(Class(ns1:SkiResort))
Declaration(Class(ns1:SocialEvent))
Declaration(Class(ns1:SoftwareApplication))
Declaration(Class(ns1:SportingGoodsStore))
Declaration(Class(ns1:SportsActivityLocation))
Declaration(Class(ns1:SportsClub))
Declaration(Class(ns1:SportsEvent))
Declaration(Class(ns1:SportsTeam))
Declaration(Class(ns1:StadiumOrArena))
Declaration(Class(ns1:State))
Declaration(Class(ns1:Store))
Declaration(Class(ns1:StructuredValue))
Declaration(Class(ns1:SubwayStation))
Declaration(Class(ns1:Synagogue))
Declaration(Class(ns1:TVEpisode))
Declaration(Class(ns1:TVSeason))
Declaration(Class(ns1:TVSeries))
Declaration(Class(ns1:Table))
Declaration(Class(ns1:TattooParlor))
Declaration(Class(ns1:TaxiStand))
Declaration(Class(ns1:TelevisionStation))
Declaration(Class(ns1:TennisComplex))
Declaration(Class(ns1:Text))
Declaration(Class(ns1:TheaterEvent))
Declaration(Class(ns1:TheaterGroup))
Declaration(Class(ns1:Thing))
Declaration(Class(ns1:TireShop))
Declaration(Class(ns1:TouristAttraction))
Declaration(Class(ns1:TouristInformationCenter))
Declaration(Class(ns1:ToyStore))
Declaration(Class(ns1:TrainStation))
Declaration(Class(ns1:TravelAgency))
Declaration(Class(ns1:URL))
Declaration(Class(ns1:UserBlocks))
Declaration(Class(ns1:UserCheckins))
Declaration(Class(ns1:UserComments))
Declaration(Class(ns1:UserDownloads))
Declaration(Class(ns1:UserInteraction))
Declaration(Class(ns1:UserLikes))
Declaration(Class(ns1:UserPageVisits))
Declaration(Class(ns1:UserPlays))
Declaration(Class(ns1:UserPlusOnes))
Declaration(Class(ns1:UserTweets))
Declaration(Class(ns1:VeterinaryCare))
Declaration(Class(ns1:VideoGallery))
Declaration(Class(ns1:VideoObject))
Declaration(Class(ns1:VisualArtsEvent))
Declaration(Class(ns1:Volcano))
Declaration(Class(ns1:WPAdBlock))
Declaration(Class(ns1:WPFooter))
Declaration(Class(ns1:WPHeader))
Declaration(Class(ns1:WPSideBar))
Declaration(Class(ns1:Waterfall))
Declaration(Class(ns1:WebApplication))
Declaration(Class(ns1:WebPage))
Declaration(Class(ns1:WebPageElement))
Declaration(Class(ns1:WholesaleStore))
Declaration(Class(ns1:Winery))
Declaration(Class(ns1:Zoo))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(ns1:domain))
Declaration(AnnotationProperty(ns1:range))


############################
#   Classes
############################

# Class: ns1:AboutPage (AboutPage)

AnnotationAssertion(rdfs:comment ns1:AboutPage "Web page type: About page.")
AnnotationAssertion(rdfs:label ns1:AboutPage "AboutPage")
SubClassOf(ns1:AboutPage ns1:WebPage)

# Class: ns1:AccountingService (AccountingService)

AnnotationAssertion(rdfs:comment ns1:AccountingService "Accountancy business.")
AnnotationAssertion(rdfs:label ns1:AccountingService "AccountingService")
SubClassOf(ns1:AccountingService ns1:FinancialService)
SubClassOf(ns1:AccountingService ns1:ProfessionalService)

# Class: ns1:AdministrativeArea (AdministrativeArea)

AnnotationAssertion(rdfs:comment ns1:AdministrativeArea "A geographical region under the jurisdiction of a particular government.")
AnnotationAssertion(rdfs:label ns1:AdministrativeArea "AdministrativeArea")
SubClassOf(ns1:AdministrativeArea ns1:Place)

# Class: ns1:AdultEntertainment (AdultEntertainment)

AnnotationAssertion(rdfs:comment ns1:AdultEntertainment "An adult entertainment establishment.")
AnnotationAssertion(rdfs:label ns1:AdultEntertainment "AdultEntertainment")
SubClassOf(ns1:AdultEntertainment ns1:EntertainmentBusiness)

# Class: ns1:AggregateOffer (AggregateOffer)

AnnotationAssertion(rdfs:comment ns1:AggregateOffer "When a single product that has different offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.")
AnnotationAssertion(rdfs:label ns1:AggregateOffer "AggregateOffer")
SubClassOf(ns1:AggregateOffer ns1:Offer)

# Class: ns1:AggregateRating (AggregateRating)

AnnotationAssertion(rdfs:comment ns1:AggregateRating "The average rating based on multiple ratings or reviews.")
AnnotationAssertion(rdfs:label ns1:AggregateRating "AggregateRating")
SubClassOf(ns1:AggregateRating ns1:Rating)

# Class: ns1:Airport (Airport)

AnnotationAssertion(rdfs:comment ns1:Airport "An airport.")
AnnotationAssertion(rdfs:label ns1:Airport "Airport")
SubClassOf(ns1:Airport ns1:CivicStructure)

# Class: ns1:AmusementPark (AmusementPark)

AnnotationAssertion(rdfs:comment ns1:AmusementPark "An amusement park.")
AnnotationAssertion(rdfs:label ns1:AmusementPark "AmusementPark")
SubClassOf(ns1:AmusementPark ns1:EntertainmentBusiness)

# Class: ns1:AnimalShelter (AnimalShelter)

AnnotationAssertion(rdfs:comment ns1:AnimalShelter "Animal shelter.")
AnnotationAssertion(rdfs:label ns1:AnimalShelter "AnimalShelter")
SubClassOf(ns1:AnimalShelter ns1:LocalBusiness)

# Class: ns1:ApartmentComplex (ApartmentComplex)

AnnotationAssertion(rdfs:comment ns1:ApartmentComplex "Residence type: Apartment complex.")
AnnotationAssertion(rdfs:label ns1:ApartmentComplex "ApartmentComplex")
SubClassOf(ns1:ApartmentComplex ns1:Residence)

# Class: ns1:Aquarium (Aquarium)

AnnotationAssertion(rdfs:comment ns1:Aquarium "Aquarium.")
AnnotationAssertion(rdfs:label ns1:Aquarium "Aquarium")
SubClassOf(ns1:Aquarium ns1:CivicStructure)

# Class: ns1:ArtGallery (ArtGallery)

AnnotationAssertion(rdfs:comment ns1:ArtGallery "An art gallery.")
AnnotationAssertion(rdfs:label ns1:ArtGallery "ArtGallery")
SubClassOf(ns1:ArtGallery ns1:EntertainmentBusiness)

# Class: ns1:Article (Article)

AnnotationAssertion(dc:source ns1:Article <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:Article "An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.")
AnnotationAssertion(rdfs:label ns1:Article "Article")
SubClassOf(ns1:Article ns1:CreativeWork)

# Class: ns1:Attorney (Attorney)

AnnotationAssertion(rdfs:comment ns1:Attorney "Professional service: Attorney.")
AnnotationAssertion(rdfs:label ns1:Attorney "Attorney")
SubClassOf(ns1:Attorney ns1:ProfessionalService)

# Class: ns1:AudioObject (AudioObject)

AnnotationAssertion(dc:source ns1:AudioObject <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:AudioObject "An audio file.")
AnnotationAssertion(rdfs:label ns1:AudioObject "AudioObject")
SubClassOf(ns1:AudioObject ns1:MediaObject)

# Class: ns1:AutoBodyShop (AutoBodyShop)

AnnotationAssertion(rdfs:comment ns1:AutoBodyShop "Auto body shop.")
AnnotationAssertion(rdfs:label ns1:AutoBodyShop "AutoBodyShop")
SubClassOf(ns1:AutoBodyShop ns1:AutomotiveBusiness)

# Class: ns1:AutoDealer (AutoDealer)

AnnotationAssertion(rdfs:comment ns1:AutoDealer "An car dealership.")
AnnotationAssertion(rdfs:label ns1:AutoDealer "AutoDealer")
SubClassOf(ns1:AutoDealer ns1:AutomotiveBusiness)

# Class: ns1:AutoPartsStore (AutoPartsStore)

AnnotationAssertion(rdfs:comment ns1:AutoPartsStore "An auto parts store.")
AnnotationAssertion(rdfs:label ns1:AutoPartsStore "AutoPartsStore")
SubClassOf(ns1:AutoPartsStore ns1:AutomotiveBusiness)
SubClassOf(ns1:AutoPartsStore ns1:Store)

# Class: ns1:AutoRental (AutoRental)

AnnotationAssertion(rdfs:comment ns1:AutoRental "A car rental business.")
AnnotationAssertion(rdfs:label ns1:AutoRental "AutoRental")
SubClassOf(ns1:AutoRental ns1:AutomotiveBusiness)

# Class: ns1:AutoRepair (AutoRepair)

AnnotationAssertion(rdfs:comment ns1:AutoRepair "Car repair business.")
AnnotationAssertion(rdfs:label ns1:AutoRepair "AutoRepair")
SubClassOf(ns1:AutoRepair ns1:AutomotiveBusiness)

# Class: ns1:AutoWash (AutoWash)

AnnotationAssertion(rdfs:comment ns1:AutoWash "A car wash business.")
AnnotationAssertion(rdfs:label ns1:AutoWash "AutoWash")
SubClassOf(ns1:AutoWash ns1:AutomotiveBusiness)

# Class: ns1:AutomatedTeller (AutomatedTeller)

AnnotationAssertion(rdfs:comment ns1:AutomatedTeller "ATM/cash machine.")
AnnotationAssertion(rdfs:label ns1:AutomatedTeller "AutomatedTeller")
SubClassOf(ns1:AutomatedTeller ns1:FinancialService)

# Class: ns1:AutomotiveBusiness (AutomotiveBusiness)

AnnotationAssertion(rdfs:comment ns1:AutomotiveBusiness "Car repair, sales, or parts.")
AnnotationAssertion(rdfs:label ns1:AutomotiveBusiness "AutomotiveBusiness")
SubClassOf(ns1:AutomotiveBusiness ns1:LocalBusiness)

# Class: ns1:Bakery (Bakery)

AnnotationAssertion(rdfs:comment ns1:Bakery "A bakery.")
AnnotationAssertion(rdfs:label ns1:Bakery "Bakery")
SubClassOf(ns1:Bakery ns1:FoodEstablishment)

# Class: ns1:BankOrCreditUnion (BankOrCreditUnion)

AnnotationAssertion(rdfs:comment ns1:BankOrCreditUnion "Bank or credit union.")
AnnotationAssertion(rdfs:label ns1:BankOrCreditUnion "BankOrCreditUnion")
SubClassOf(ns1:BankOrCreditUnion ns1:FinancialService)

# Class: ns1:BarOrPub (BarOrPub)

AnnotationAssertion(rdfs:comment ns1:BarOrPub "A bar or pub.")
AnnotationAssertion(rdfs:label ns1:BarOrPub "BarOrPub")
SubClassOf(ns1:BarOrPub ns1:FoodEstablishment)

# Class: ns1:Beach (Beach)

AnnotationAssertion(rdfs:comment ns1:Beach "Beach.")
AnnotationAssertion(rdfs:label ns1:Beach "Beach")
SubClassOf(ns1:Beach ns1:CivicStructure)

# Class: ns1:BeautySalon (BeautySalon)

AnnotationAssertion(rdfs:comment ns1:BeautySalon "Beauty salon.")
AnnotationAssertion(rdfs:label ns1:BeautySalon "BeautySalon")
SubClassOf(ns1:BeautySalon ns1:HealthAndBeautyBusiness)

# Class: ns1:BedAndBreakfast (BedAndBreakfast)

AnnotationAssertion(rdfs:comment ns1:BedAndBreakfast "Bed and breakfast.")
AnnotationAssertion(rdfs:label ns1:BedAndBreakfast "BedAndBreakfast")
SubClassOf(ns1:BedAndBreakfast ns1:LodgingBusiness)

# Class: ns1:BikeStore (BikeStore)

AnnotationAssertion(rdfs:comment ns1:BikeStore "A bike store.")
AnnotationAssertion(rdfs:label ns1:BikeStore "BikeStore")
SubClassOf(ns1:BikeStore ns1:Store)

# Class: ns1:Blog (Blog)

AnnotationAssertion(rdfs:comment ns1:Blog "A blog")
AnnotationAssertion(rdfs:label ns1:Blog "Blog")
SubClassOf(ns1:Blog ns1:CreativeWork)

# Class: ns1:BlogPosting (BlogPosting)

AnnotationAssertion(rdfs:comment ns1:BlogPosting "A blog post.")
AnnotationAssertion(rdfs:label ns1:BlogPosting "BlogPosting")
SubClassOf(ns1:BlogPosting ns1:Article)

# Class: ns1:BodyOfWater (BodyOfWater)

AnnotationAssertion(rdfs:comment ns1:BodyOfWater "A body of water, such as a sea, ocean, or lake.")
AnnotationAssertion(rdfs:label ns1:BodyOfWater "BodyOfWater")
SubClassOf(ns1:BodyOfWater ns1:Landform)

# Class: ns1:Book (Book)

AnnotationAssertion(rdfs:comment ns1:Book "A book.")
AnnotationAssertion(rdfs:label ns1:Book "Book")
SubClassOf(ns1:Book ns1:CreativeWork)

# Class: ns1:BookFormatType (BookFormatType)

AnnotationAssertion(rdfs:comment ns1:BookFormatType "The publication format of the book.")
AnnotationAssertion(rdfs:label ns1:BookFormatType "BookFormatType")
SubClassOf(ns1:BookFormatType ns1:Enumeration)

# Class: ns1:BookStore (BookStore)

AnnotationAssertion(rdfs:comment ns1:BookStore "A bookstore.")
AnnotationAssertion(rdfs:label ns1:BookStore "BookStore")
SubClassOf(ns1:BookStore ns1:Store)

# Class: ns1:Boolean (Boolean)

AnnotationAssertion(rdfs:comment ns1:Boolean "Boolean: True or False.")
AnnotationAssertion(rdfs:label ns1:Boolean "Boolean")
SubClassOf(ns1:Boolean ns1:DataType)

# Class: ns1:BowlingAlley (BowlingAlley)

AnnotationAssertion(rdfs:comment ns1:BowlingAlley "A bowling alley.")
AnnotationAssertion(rdfs:label ns1:BowlingAlley "BowlingAlley")
SubClassOf(ns1:BowlingAlley ns1:SportsActivityLocation)

# Class: ns1:Brewery (Brewery)

AnnotationAssertion(rdfs:comment ns1:Brewery "Brewery.")
AnnotationAssertion(rdfs:label ns1:Brewery "Brewery")
SubClassOf(ns1:Brewery ns1:FoodEstablishment)

# Class: ns1:BuddhistTemple (BuddhistTemple)

AnnotationAssertion(rdfs:comment ns1:BuddhistTemple "A Buddhist temple.")
AnnotationAssertion(rdfs:label ns1:BuddhistTemple "BuddhistTemple")
SubClassOf(ns1:BuddhistTemple ns1:PlaceOfWorship)

# Class: ns1:BusStation (BusStation)

AnnotationAssertion(rdfs:comment ns1:BusStation "A bus station.")
AnnotationAssertion(rdfs:label ns1:BusStation "BusStation")
SubClassOf(ns1:BusStation ns1:CivicStructure)

# Class: ns1:BusStop (BusStop)

AnnotationAssertion(rdfs:comment ns1:BusStop "A bus stop.")
AnnotationAssertion(rdfs:label ns1:BusStop "BusStop")
SubClassOf(ns1:BusStop ns1:CivicStructure)

# Class: ns1:BusinessEvent (BusinessEvent)

AnnotationAssertion(rdfs:comment ns1:BusinessEvent "Event type: Business event.")
AnnotationAssertion(rdfs:label ns1:BusinessEvent "BusinessEvent")
SubClassOf(ns1:BusinessEvent ns1:Event)

# Class: ns1:CafeOrCoffeeShop (CafeOrCoffeeShop)

AnnotationAssertion(rdfs:comment ns1:CafeOrCoffeeShop "A cafe or coffee shop.")
AnnotationAssertion(rdfs:label ns1:CafeOrCoffeeShop "CafeOrCoffeeShop")
SubClassOf(ns1:CafeOrCoffeeShop ns1:FoodEstablishment)

# Class: ns1:Campground (Campground)

AnnotationAssertion(rdfs:comment ns1:Campground "A campground.")
AnnotationAssertion(rdfs:label ns1:Campground "Campground")
SubClassOf(ns1:Campground ns1:CivicStructure)

# Class: ns1:Canal (Canal)

AnnotationAssertion(rdfs:comment ns1:Canal "A canal, like the Panama Canal")
AnnotationAssertion(rdfs:label ns1:Canal "Canal")
SubClassOf(ns1:Canal ns1:BodyOfWater)

# Class: ns1:Casino (Casino)

AnnotationAssertion(rdfs:comment ns1:Casino "A casino.")
AnnotationAssertion(rdfs:label ns1:Casino "Casino")
SubClassOf(ns1:Casino ns1:EntertainmentBusiness)

# Class: ns1:CatholicChurch (CatholicChurch)

AnnotationAssertion(rdfs:comment ns1:CatholicChurch "A Catholic church.")
AnnotationAssertion(rdfs:label ns1:CatholicChurch "CatholicChurch")
SubClassOf(ns1:CatholicChurch ns1:PlaceOfWorship)

# Class: ns1:Cemetery (Cemetery)

AnnotationAssertion(rdfs:comment ns1:Cemetery "A graveyard.")
AnnotationAssertion(rdfs:label ns1:Cemetery "Cemetery")
SubClassOf(ns1:Cemetery ns1:CivicStructure)

# Class: ns1:CheckoutPage (CheckoutPage)

AnnotationAssertion(rdfs:comment ns1:CheckoutPage "Web page type: Checkout page.")
AnnotationAssertion(rdfs:label ns1:CheckoutPage "CheckoutPage")
SubClassOf(ns1:CheckoutPage ns1:WebPage)

# Class: ns1:ChildCare (ChildCare)

AnnotationAssertion(rdfs:comment ns1:ChildCare "A Childcare center.")
AnnotationAssertion(rdfs:label ns1:ChildCare "ChildCare")
SubClassOf(ns1:ChildCare ns1:LocalBusiness)

# Class: ns1:ChildrensEvent (ChildrensEvent)

AnnotationAssertion(rdfs:comment ns1:ChildrensEvent "Event type: Children's event.")
AnnotationAssertion(rdfs:label ns1:ChildrensEvent "ChildrensEvent")
SubClassOf(ns1:ChildrensEvent ns1:Event)

# Class: ns1:Church (Church)

AnnotationAssertion(rdfs:comment ns1:Church "A church.")
AnnotationAssertion(rdfs:label ns1:Church "Church")
SubClassOf(ns1:Church ns1:PlaceOfWorship)

# Class: ns1:City (City)

AnnotationAssertion(rdfs:comment ns1:City "A city or town.")
AnnotationAssertion(rdfs:label ns1:City "City")
SubClassOf(ns1:City ns1:AdministrativeArea)

# Class: ns1:CityHall (CityHall)

AnnotationAssertion(rdfs:comment ns1:CityHall "A city hall.")
AnnotationAssertion(rdfs:label ns1:CityHall "CityHall")
SubClassOf(ns1:CityHall ns1:GovernmentBuilding)

# Class: ns1:CivicStructure (CivicStructure)

AnnotationAssertion(rdfs:comment ns1:CivicStructure "A public structure, such as a town hall or concert hall.")
AnnotationAssertion(rdfs:label ns1:CivicStructure "CivicStructure")
SubClassOf(ns1:CivicStructure ns1:Place)

# Class: ns1:ClothingStore (ClothingStore)

AnnotationAssertion(rdfs:comment ns1:ClothingStore "A clothing store.")
AnnotationAssertion(rdfs:label ns1:ClothingStore "ClothingStore")
SubClassOf(ns1:ClothingStore ns1:Store)

# Class: ns1:CollectionPage (CollectionPage)

AnnotationAssertion(rdfs:comment ns1:CollectionPage "Web page type: Collection page.")
AnnotationAssertion(rdfs:label ns1:CollectionPage "CollectionPage")
SubClassOf(ns1:CollectionPage ns1:WebPage)

# Class: ns1:CollegeOrUniversity (CollegeOrUniversity)

AnnotationAssertion(rdfs:comment ns1:CollegeOrUniversity "A college, university, or other third-level educational institution.")
AnnotationAssertion(rdfs:label ns1:CollegeOrUniversity "CollegeOrUniversity")
SubClassOf(ns1:CollegeOrUniversity ns1:EducationalOrganization)

# Class: ns1:ComedyClub (ComedyClub)

AnnotationAssertion(rdfs:comment ns1:ComedyClub "A comedy club.")
AnnotationAssertion(rdfs:label ns1:ComedyClub "ComedyClub")
SubClassOf(ns1:ComedyClub ns1:EntertainmentBusiness)

# Class: ns1:ComedyEvent (ComedyEvent)

AnnotationAssertion(rdfs:comment ns1:ComedyEvent "Event type: Comedy event.")
AnnotationAssertion(rdfs:label ns1:ComedyEvent "ComedyEvent")
SubClassOf(ns1:ComedyEvent ns1:Event)

# Class: ns1:Comment (Comment)

AnnotationAssertion(rdfs:comment ns1:Comment "A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the \"text\" property, and its topic via \"about\", properties shared with all CreativeWorks.")
AnnotationAssertion(rdfs:label ns1:Comment "Comment")
SubClassOf(ns1:Comment ns1:CreativeWork)

# Class: ns1:ComputerStore (ComputerStore)

AnnotationAssertion(rdfs:comment ns1:ComputerStore "A computer store.")
AnnotationAssertion(rdfs:label ns1:ComputerStore "ComputerStore")
SubClassOf(ns1:ComputerStore ns1:Store)

# Class: ns1:ContactPage (ContactPage)

AnnotationAssertion(rdfs:comment ns1:ContactPage "Web page type: Contact page.")
AnnotationAssertion(rdfs:label ns1:ContactPage "ContactPage")
SubClassOf(ns1:ContactPage ns1:WebPage)

# Class: ns1:ContactPoint (ContactPoint)

AnnotationAssertion(rdfs:comment ns1:ContactPoint "A contact point—for example, a Customer Complaints department.")
AnnotationAssertion(rdfs:label ns1:ContactPoint "ContactPoint")
SubClassOf(ns1:ContactPoint ns1:StructuredValue)

# Class: ns1:Continent (Continent)

AnnotationAssertion(rdfs:comment ns1:Continent "One of the continents (for example, Europe or Africa).")
AnnotationAssertion(rdfs:label ns1:Continent "Continent")
SubClassOf(ns1:Continent ns1:Landform)

# Class: ns1:ConvenienceStore (ConvenienceStore)

AnnotationAssertion(rdfs:comment ns1:ConvenienceStore "A convenience store.")
AnnotationAssertion(rdfs:label ns1:ConvenienceStore "ConvenienceStore")
SubClassOf(ns1:ConvenienceStore ns1:Store)

# Class: ns1:Corporation (Corporation)

AnnotationAssertion(dc:source ns1:Corporation <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:Corporation "Organization: A business corporation.")
AnnotationAssertion(rdfs:label ns1:Corporation "Corporation")
SubClassOf(ns1:Corporation ns1:Organization)

# Class: ns1:Country (Country)

AnnotationAssertion(rdfs:comment ns1:Country "A country.")
AnnotationAssertion(rdfs:label ns1:Country "Country")
SubClassOf(ns1:Country ns1:AdministrativeArea)

# Class: ns1:Courthouse (Courthouse)

AnnotationAssertion(rdfs:comment ns1:Courthouse "A courthouse.")
AnnotationAssertion(rdfs:label ns1:Courthouse "Courthouse")
SubClassOf(ns1:Courthouse ns1:GovernmentBuilding)

# Class: ns1:CreativeWork (CreativeWork)

AnnotationAssertion(dc:source ns1:CreativeWork <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:CreativeWork "The most generic kind of creative work, including books, movies, photographs, software programs, etc.")
AnnotationAssertion(rdfs:label ns1:CreativeWork "CreativeWork")
SubClassOf(ns1:CreativeWork ns1:Thing)

# Class: ns1:Crematorium (Crematorium)

AnnotationAssertion(rdfs:comment ns1:Crematorium "A crematorium.")
AnnotationAssertion(rdfs:label ns1:Crematorium "Crematorium")
SubClassOf(ns1:Crematorium ns1:CivicStructure)

# Class: ns1:DanceEvent (DanceEvent)

AnnotationAssertion(rdfs:comment ns1:DanceEvent "Event type: A social dance.")
AnnotationAssertion(rdfs:label ns1:DanceEvent "DanceEvent")
SubClassOf(ns1:DanceEvent ns1:Event)

# Class: ns1:DanceGroup (DanceGroup)

AnnotationAssertion(rdfs:comment ns1:DanceGroup "A dance group—for example, the Alvin Ailey Dance Theater or Riverdance.")
AnnotationAssertion(rdfs:label ns1:DanceGroup "DanceGroup")
SubClassOf(ns1:DanceGroup ns1:PerformingGroup)

# Class: ns1:DataType (DataType)

AnnotationAssertion(rdfs:comment ns1:DataType "The basic data types such as Integers, Strings, etc.")
AnnotationAssertion(rdfs:label ns1:DataType "DataType")

# Class: ns1:Date (Date)

AnnotationAssertion(rdfs:comment ns1:Date "A date value in ISO 8601 date format.")
AnnotationAssertion(rdfs:label ns1:Date "Date")
SubClassOf(ns1:Date ns1:DataType)

# Class: ns1:DaySpa (DaySpa)

AnnotationAssertion(rdfs:comment ns1:DaySpa "A day spa.")
AnnotationAssertion(rdfs:label ns1:DaySpa "DaySpa")
SubClassOf(ns1:DaySpa ns1:HealthAndBeautyBusiness)

# Class: ns1:DefenceEstablishment (DefenceEstablishment)

AnnotationAssertion(rdfs:comment ns1:DefenceEstablishment "A defence establishment, such as an army or navy base.")
AnnotationAssertion(rdfs:label ns1:DefenceEstablishment "DefenceEstablishment")
SubClassOf(ns1:DefenceEstablishment ns1:GovernmentBuilding)

# Class: ns1:Dentist (Dentist)

AnnotationAssertion(rdfs:comment ns1:Dentist "A dentist.")
AnnotationAssertion(rdfs:label ns1:Dentist "Dentist")
SubClassOf(ns1:Dentist ns1:MedicalOrganization)
SubClassOf(ns1:Dentist ns1:ProfessionalService)

# Class: ns1:DepartmentStore (DepartmentStore)

AnnotationAssertion(rdfs:comment ns1:DepartmentStore "A department store.")
AnnotationAssertion(rdfs:label ns1:DepartmentStore "DepartmentStore")
SubClassOf(ns1:DepartmentStore ns1:Store)

# Class: ns1:Distance (Distance)

AnnotationAssertion(rdfs:comment ns1:Distance "Properties that take Distances as values are of the form '<Number> <Length unit of measure>'. E.g., '7 ft'")
AnnotationAssertion(rdfs:label ns1:Distance "Distance")
SubClassOf(ns1:Distance ns1:Quantity)

# Class: ns1:DryCleaningOrLaundry (DryCleaningOrLaundry)

AnnotationAssertion(rdfs:comment ns1:DryCleaningOrLaundry "A dry-cleaning business.")
AnnotationAssertion(rdfs:label ns1:DryCleaningOrLaundry "DryCleaningOrLaundry")
SubClassOf(ns1:DryCleaningOrLaundry ns1:LocalBusiness)

# Class: ns1:Duration (Duration)

AnnotationAssertion(rdfs:comment ns1:Duration "Quantity: Duration (use  ISO 8601 duration format).")
AnnotationAssertion(rdfs:label ns1:Duration "Duration")
SubClassOf(ns1:Duration ns1:Quantity)

# Class: ns1:EducationEvent (EducationEvent)

AnnotationAssertion(rdfs:comment ns1:EducationEvent "Event type: Education event.")
AnnotationAssertion(rdfs:label ns1:EducationEvent "EducationEvent")
SubClassOf(ns1:EducationEvent ns1:Event)

# Class: ns1:EducationalOrganization (EducationalOrganization)

AnnotationAssertion(rdfs:comment ns1:EducationalOrganization "An educational organization.")
AnnotationAssertion(rdfs:label ns1:EducationalOrganization "EducationalOrganization")
SubClassOf(ns1:EducationalOrganization ns1:Organization)

# Class: ns1:Electrician (Electrician)

AnnotationAssertion(rdfs:comment ns1:Electrician "An electrician.")
AnnotationAssertion(rdfs:label ns1:Electrician "Electrician")
SubClassOf(ns1:Electrician ns1:HomeAndConstructionBusiness)
SubClassOf(ns1:Electrician ns1:ProfessionalService)

# Class: ns1:ElectronicsStore (ElectronicsStore)

AnnotationAssertion(rdfs:comment ns1:ElectronicsStore "An electronics store.")
AnnotationAssertion(rdfs:label ns1:ElectronicsStore "ElectronicsStore")
SubClassOf(ns1:ElectronicsStore ns1:Store)

# Class: ns1:ElementarySchool (ElementarySchool)

AnnotationAssertion(rdfs:comment ns1:ElementarySchool "An elementary school.")
AnnotationAssertion(rdfs:label ns1:ElementarySchool "ElementarySchool")
SubClassOf(ns1:ElementarySchool ns1:EducationalOrganization)

# Class: ns1:Embassy (Embassy)

AnnotationAssertion(rdfs:comment ns1:Embassy "An embassy.")
AnnotationAssertion(rdfs:label ns1:Embassy "Embassy")
SubClassOf(ns1:Embassy ns1:GovernmentBuilding)

# Class: ns1:EmergencyService (EmergencyService)

AnnotationAssertion(rdfs:comment ns1:EmergencyService "An emergency service, such as a fire station or ER.")
AnnotationAssertion(rdfs:label ns1:EmergencyService "EmergencyService")
SubClassOf(ns1:EmergencyService ns1:LocalBusiness)

# Class: ns1:EmploymentAgency (EmploymentAgency)

AnnotationAssertion(rdfs:comment ns1:EmploymentAgency "An employment agency.")
AnnotationAssertion(rdfs:label ns1:EmploymentAgency "EmploymentAgency")
SubClassOf(ns1:EmploymentAgency ns1:LocalBusiness)

# Class: ns1:Energy (Energy)

AnnotationAssertion(rdfs:comment ns1:Energy "Properties that take Enerygy as values are of the form '<Number> <Energy unit of measure>'")
AnnotationAssertion(rdfs:label ns1:Energy "Energy")
SubClassOf(ns1:Energy ns1:Quantity)

# Class: ns1:EntertainmentBusiness (EntertainmentBusiness)

AnnotationAssertion(rdfs:comment ns1:EntertainmentBusiness "A business providing entertainment.")
AnnotationAssertion(rdfs:label ns1:EntertainmentBusiness "EntertainmentBusiness")
SubClassOf(ns1:EntertainmentBusiness ns1:LocalBusiness)

# Class: ns1:Enumeration (Enumeration)

AnnotationAssertion(rdfs:comment ns1:Enumeration "Lists or enumerations—for example, a list of cuisines or music genres, etc.")
AnnotationAssertion(rdfs:label ns1:Enumeration "Enumeration")
SubClassOf(ns1:Enumeration ns1:Intangible)

# Class: ns1:Event (Event)

AnnotationAssertion(rdfs:comment ns1:Event "An event happening at a certain time at a certain location.")
AnnotationAssertion(rdfs:label ns1:Event "Event")
SubClassOf(ns1:Event ns1:Thing)

# Class: ns1:EventVenue (EventVenue)

AnnotationAssertion(rdfs:comment ns1:EventVenue "An event venue.")
AnnotationAssertion(rdfs:label ns1:EventVenue "EventVenue")
SubClassOf(ns1:EventVenue ns1:CivicStructure)

# Class: ns1:ExerciseGym (ExerciseGym)

AnnotationAssertion(rdfs:comment ns1:ExerciseGym "A gym.")
AnnotationAssertion(rdfs:label ns1:ExerciseGym "ExerciseGym")
SubClassOf(ns1:ExerciseGym ns1:SportsActivityLocation)

# Class: ns1:FastFoodRestaurant (FastFoodRestaurant)

AnnotationAssertion(rdfs:comment ns1:FastFoodRestaurant "A fast-food restaurant.")
AnnotationAssertion(rdfs:label ns1:FastFoodRestaurant "FastFoodRestaurant")
SubClassOf(ns1:FastFoodRestaurant ns1:FoodEstablishment)

# Class: ns1:Festival (Festival)

AnnotationAssertion(rdfs:comment ns1:Festival "Event type: Festival.")
AnnotationAssertion(rdfs:label ns1:Festival "Festival")
SubClassOf(ns1:Festival ns1:Event)

# Class: ns1:FinancialService (FinancialService)

AnnotationAssertion(rdfs:comment ns1:FinancialService "Financial services business.")
AnnotationAssertion(rdfs:label ns1:FinancialService "FinancialService")
SubClassOf(ns1:FinancialService ns1:LocalBusiness)

# Class: ns1:FireStation (FireStation)

AnnotationAssertion(rdfs:comment ns1:FireStation "A fire station. With firemen.")
AnnotationAssertion(rdfs:label ns1:FireStation "FireStation")
SubClassOf(ns1:FireStation ns1:CivicStructure)
SubClassOf(ns1:FireStation ns1:EmergencyService)

# Class: ns1:Float (Float)

AnnotationAssertion(rdfs:comment ns1:Float "Data type: Floating number.")
AnnotationAssertion(rdfs:label ns1:Float "Float")
SubClassOf(ns1:Float ns1:Number)

# Class: ns1:Florist (Florist)

AnnotationAssertion(rdfs:comment ns1:Florist "A florist.")
AnnotationAssertion(rdfs:label ns1:Florist "Florist")
SubClassOf(ns1:Florist ns1:Store)

# Class: ns1:FoodEstablishment (FoodEstablishment)

AnnotationAssertion(rdfs:comment ns1:FoodEstablishment "A food-related business.")
AnnotationAssertion(rdfs:label ns1:FoodEstablishment "FoodEstablishment")
SubClassOf(ns1:FoodEstablishment ns1:LocalBusiness)

# Class: ns1:FoodEvent (FoodEvent)

AnnotationAssertion(rdfs:comment ns1:FoodEvent "Event type: Food event.")
AnnotationAssertion(rdfs:label ns1:FoodEvent "FoodEvent")
SubClassOf(ns1:FoodEvent ns1:Event)

# Class: ns1:FurnitureStore (FurnitureStore)

AnnotationAssertion(rdfs:comment ns1:FurnitureStore "A furniture store.")
AnnotationAssertion(rdfs:label ns1:FurnitureStore "FurnitureStore")
SubClassOf(ns1:FurnitureStore ns1:Store)

# Class: ns1:GardenStore (GardenStore)

AnnotationAssertion(rdfs:comment ns1:GardenStore "A garden store.")
AnnotationAssertion(rdfs:label ns1:GardenStore "GardenStore")
SubClassOf(ns1:GardenStore ns1:Store)

# Class: ns1:GasStation (GasStation)

AnnotationAssertion(rdfs:comment ns1:GasStation "A gas station.")
AnnotationAssertion(rdfs:label ns1:GasStation "GasStation")
SubClassOf(ns1:GasStation ns1:AutomotiveBusiness)

# Class: ns1:GatedResidenceCommunity (GatedResidenceCommunity)

AnnotationAssertion(rdfs:comment ns1:GatedResidenceCommunity "Residence type: Gated community.")
AnnotationAssertion(rdfs:label ns1:GatedResidenceCommunity "GatedResidenceCommunity")
SubClassOf(ns1:GatedResidenceCommunity ns1:Residence)

# Class: ns1:GeneralContractor (GeneralContractor)

AnnotationAssertion(rdfs:comment ns1:GeneralContractor "A general contractor.")
AnnotationAssertion(rdfs:label ns1:GeneralContractor "GeneralContractor")
SubClassOf(ns1:GeneralContractor ns1:HomeAndConstructionBusiness)
SubClassOf(ns1:GeneralContractor ns1:ProfessionalService)

# Class: ns1:GeoCoordinates (GeoCoordinates)

AnnotationAssertion(rdfs:comment ns1:GeoCoordinates "The geographic coordinates of a place or event.")
AnnotationAssertion(rdfs:label ns1:GeoCoordinates "GeoCoordinates")
SubClassOf(ns1:GeoCoordinates ns1:StructuredValue)

# Class: ns1:GeoShape (GeoShape)

AnnotationAssertion(dc:source ns1:GeoShape <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:GeoShape "The geographic shape of a place.")
AnnotationAssertion(rdfs:label ns1:GeoShape "GeoShape")
SubClassOf(ns1:GeoShape ns1:StructuredValue)

# Class: ns1:GolfCourse (GolfCourse)

AnnotationAssertion(rdfs:comment ns1:GolfCourse "A golf course.")
AnnotationAssertion(rdfs:label ns1:GolfCourse "GolfCourse")
SubClassOf(ns1:GolfCourse ns1:SportsActivityLocation)

# Class: ns1:GovernmentBuilding (GovernmentBuilding)

AnnotationAssertion(rdfs:comment ns1:GovernmentBuilding "A government building.")
AnnotationAssertion(rdfs:label ns1:GovernmentBuilding "GovernmentBuilding")
SubClassOf(ns1:GovernmentBuilding ns1:CivicStructure)

# Class: ns1:GovernmentOffice (GovernmentOffice)

AnnotationAssertion(rdfs:comment ns1:GovernmentOffice "A government office—for example, an IRS or DMV office.")
AnnotationAssertion(rdfs:label ns1:GovernmentOffice "GovernmentOffice")
SubClassOf(ns1:GovernmentOffice ns1:LocalBusiness)

# Class: ns1:GovernmentOrganization (GovernmentOrganization)

AnnotationAssertion(rdfs:comment ns1:GovernmentOrganization "A governmental organization or agency.")
AnnotationAssertion(rdfs:label ns1:GovernmentOrganization "GovernmentOrganization")
SubClassOf(ns1:GovernmentOrganization ns1:Organization)

# Class: ns1:GroceryStore (GroceryStore)

AnnotationAssertion(rdfs:comment ns1:GroceryStore "A grocery store.")
AnnotationAssertion(rdfs:label ns1:GroceryStore "GroceryStore")
SubClassOf(ns1:GroceryStore ns1:Store)

# Class: ns1:HVACBusiness (HVACBusiness)

AnnotationAssertion(rdfs:comment ns1:HVACBusiness "An HVAC service.")
AnnotationAssertion(rdfs:label ns1:HVACBusiness "HVACBusiness")
SubClassOf(ns1:HVACBusiness ns1:HomeAndConstructionBusiness)

# Class: ns1:HairSalon (HairSalon)

AnnotationAssertion(rdfs:comment ns1:HairSalon "A hair salon.")
AnnotationAssertion(rdfs:label ns1:HairSalon "HairSalon")
SubClassOf(ns1:HairSalon ns1:HealthAndBeautyBusiness)

# Class: ns1:HardwareStore (HardwareStore)

AnnotationAssertion(rdfs:comment ns1:HardwareStore "A hardware store.")
AnnotationAssertion(rdfs:label ns1:HardwareStore "HardwareStore")
SubClassOf(ns1:HardwareStore ns1:Store)

# Class: ns1:HealthAndBeautyBusiness (HealthAndBeautyBusiness)

AnnotationAssertion(rdfs:comment ns1:HealthAndBeautyBusiness "Health and beauty.")
AnnotationAssertion(rdfs:label ns1:HealthAndBeautyBusiness "HealthAndBeautyBusiness")
SubClassOf(ns1:HealthAndBeautyBusiness ns1:LocalBusiness)

# Class: ns1:HealthClub (HealthClub)

AnnotationAssertion(rdfs:comment ns1:HealthClub "A health club.")
AnnotationAssertion(rdfs:label ns1:HealthClub "HealthClub")
SubClassOf(ns1:HealthClub ns1:HealthAndBeautyBusiness)
SubClassOf(ns1:HealthClub ns1:SportsActivityLocation)

# Class: ns1:HighSchool (HighSchool)

AnnotationAssertion(rdfs:comment ns1:HighSchool "A high school.")
AnnotationAssertion(rdfs:label ns1:HighSchool "HighSchool")
SubClassOf(ns1:HighSchool ns1:EducationalOrganization)

# Class: ns1:HinduTemple (HinduTemple)

AnnotationAssertion(rdfs:comment ns1:HinduTemple "A Hindu temple.")
AnnotationAssertion(rdfs:label ns1:HinduTemple "HinduTemple")
SubClassOf(ns1:HinduTemple ns1:PlaceOfWorship)

# Class: ns1:HobbyShop (HobbyShop)

AnnotationAssertion(rdfs:comment ns1:HobbyShop "A hobby store.")
AnnotationAssertion(rdfs:label ns1:HobbyShop "HobbyShop")
SubClassOf(ns1:HobbyShop ns1:Store)

# Class: ns1:HomeAndConstructionBusiness (HomeAndConstructionBusiness)

AnnotationAssertion(rdfs:comment ns1:HomeAndConstructionBusiness "A construction business.")
AnnotationAssertion(rdfs:label ns1:HomeAndConstructionBusiness "HomeAndConstructionBusiness")
SubClassOf(ns1:HomeAndConstructionBusiness ns1:LocalBusiness)

# Class: ns1:HomeGoodsStore (HomeGoodsStore)

AnnotationAssertion(rdfs:comment ns1:HomeGoodsStore "A home goods store.")
AnnotationAssertion(rdfs:label ns1:HomeGoodsStore "HomeGoodsStore")
SubClassOf(ns1:HomeGoodsStore ns1:Store)

# Class: ns1:Hospital (Hospital)

AnnotationAssertion(rdfs:comment ns1:Hospital "A hospital.")
AnnotationAssertion(rdfs:label ns1:Hospital "Hospital")
SubClassOf(ns1:Hospital ns1:CivicStructure)
SubClassOf(ns1:Hospital ns1:EmergencyService)
SubClassOf(ns1:Hospital ns1:MedicalOrganization)

# Class: ns1:Hostel (Hostel)

AnnotationAssertion(rdfs:comment ns1:Hostel "A hostel.")
AnnotationAssertion(rdfs:label ns1:Hostel "Hostel")
SubClassOf(ns1:Hostel ns1:LodgingBusiness)

# Class: ns1:Hotel (Hotel)

AnnotationAssertion(rdfs:comment ns1:Hotel "A hotel.")
AnnotationAssertion(rdfs:label ns1:Hotel "Hotel")
SubClassOf(ns1:Hotel ns1:LodgingBusiness)

# Class: ns1:HousePainter (HousePainter)

AnnotationAssertion(rdfs:comment ns1:HousePainter "A house painting service.")
AnnotationAssertion(rdfs:label ns1:HousePainter "HousePainter")
SubClassOf(ns1:HousePainter ns1:HomeAndConstructionBusiness)
SubClassOf(ns1:HousePainter ns1:ProfessionalService)

# Class: ns1:IceCreamShop (IceCreamShop)

AnnotationAssertion(rdfs:comment ns1:IceCreamShop "An ice cream shop")
AnnotationAssertion(rdfs:label ns1:IceCreamShop "IceCreamShop")
SubClassOf(ns1:IceCreamShop ns1:FoodEstablishment)

# Class: ns1:ImageGallery (ImageGallery)

AnnotationAssertion(rdfs:comment ns1:ImageGallery "Web page type: Image gallery page.")
AnnotationAssertion(rdfs:label ns1:ImageGallery "ImageGallery")
SubClassOf(ns1:ImageGallery ns1:CollectionPage)

# Class: ns1:ImageObject (ImageObject)

AnnotationAssertion(rdfs:comment ns1:ImageObject "An image file.")
AnnotationAssertion(rdfs:label ns1:ImageObject "ImageObject")
SubClassOf(ns1:ImageObject ns1:MediaObject)

# Class: ns1:InsuranceAgency (InsuranceAgency)

AnnotationAssertion(rdfs:comment ns1:InsuranceAgency "Insurance agency.")
AnnotationAssertion(rdfs:label ns1:InsuranceAgency "InsuranceAgency")
SubClassOf(ns1:InsuranceAgency ns1:FinancialService)

# Class: ns1:Intangible (Intangible)

AnnotationAssertion(rdfs:comment ns1:Intangible "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.")
AnnotationAssertion(rdfs:label ns1:Intangible "Intangible")
SubClassOf(ns1:Intangible ns1:Thing)

# Class: ns1:Integer (Integer)

AnnotationAssertion(rdfs:comment ns1:Integer "Data type: Integer.")
AnnotationAssertion(rdfs:label ns1:Integer "Integer")
SubClassOf(ns1:Integer ns1:Number)

# Class: ns1:InternetCafe (InternetCafe)

AnnotationAssertion(rdfs:comment ns1:InternetCafe "An internet cafe.")
AnnotationAssertion(rdfs:label ns1:InternetCafe "InternetCafe")
SubClassOf(ns1:InternetCafe ns1:LocalBusiness)

# Class: ns1:ItemAvailability (ItemAvailability)

AnnotationAssertion(rdfs:comment ns1:ItemAvailability "A list of possible product availablity options.")
AnnotationAssertion(rdfs:label ns1:ItemAvailability "ItemAvailability")
SubClassOf(ns1:ItemAvailability ns1:Enumeration)

# Class: ns1:ItemList (ItemList)

AnnotationAssertion(rdfs:comment ns1:ItemList "A list of items of any sort—for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.")
AnnotationAssertion(rdfs:label ns1:ItemList "ItemList")
SubClassOf(ns1:ItemList ns1:CreativeWork)

# Class: ns1:ItemPage (ItemPage)

AnnotationAssertion(rdfs:comment ns1:ItemPage "A page devoted to a single item, such as a particular product or hotel.")
AnnotationAssertion(rdfs:label ns1:ItemPage "ItemPage")
SubClassOf(ns1:ItemPage ns1:WebPage)

# Class: ns1:JewelryStore (JewelryStore)

AnnotationAssertion(rdfs:comment ns1:JewelryStore "A jewelry store.")
AnnotationAssertion(rdfs:label ns1:JewelryStore "JewelryStore")
SubClassOf(ns1:JewelryStore ns1:Store)

# Class: ns1:JobPosting (JobPosting)

AnnotationAssertion(rdfs:comment ns1:JobPosting "A listing that describes a job opening in a certain organization.")
AnnotationAssertion(rdfs:label ns1:JobPosting "JobPosting")
SubClassOf(ns1:JobPosting ns1:Intangible)

# Class: ns1:LakeBodyOfWater (LakeBodyOfWater)

AnnotationAssertion(rdfs:comment ns1:LakeBodyOfWater "A lake (for example, Lake Pontrachain).")
AnnotationAssertion(rdfs:label ns1:LakeBodyOfWater "LakeBodyOfWater")
SubClassOf(ns1:LakeBodyOfWater ns1:BodyOfWater)

# Class: ns1:Landform (Landform)

AnnotationAssertion(rdfs:comment ns1:Landform "A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.")
AnnotationAssertion(rdfs:label ns1:Landform "Landform")
SubClassOf(ns1:Landform ns1:Place)

# Class: ns1:LandmarksOrHistoricalBuildings (LandmarksOrHistoricalBuildings)

AnnotationAssertion(rdfs:comment ns1:LandmarksOrHistoricalBuildings "An historical landmark or building.")
AnnotationAssertion(rdfs:label ns1:LandmarksOrHistoricalBuildings "LandmarksOrHistoricalBuildings")
SubClassOf(ns1:LandmarksOrHistoricalBuildings ns1:Place)

# Class: ns1:Language (Language)

AnnotationAssertion(rdfs:comment ns1:Language "Natural languages such as Spanish, Tamil, Hindi, English, etc. and programming languages such as Scheme and Lisp.")
AnnotationAssertion(rdfs:label ns1:Language "Language")
SubClassOf(ns1:Language ns1:Intangible)

# Class: ns1:LegislativeBuilding (LegislativeBuilding)

AnnotationAssertion(rdfs:comment ns1:LegislativeBuilding "A legislative building—for example, the state capitol.")
AnnotationAssertion(rdfs:label ns1:LegislativeBuilding "LegislativeBuilding")
SubClassOf(ns1:LegislativeBuilding ns1:GovernmentBuilding)

# Class: ns1:Library (Library)

AnnotationAssertion(rdfs:comment ns1:Library "A library.")
AnnotationAssertion(rdfs:label ns1:Library "Library")
SubClassOf(ns1:Library ns1:LocalBusiness)

# Class: ns1:LiquorStore (LiquorStore)

AnnotationAssertion(rdfs:comment ns1:LiquorStore "A liquor store.")
AnnotationAssertion(rdfs:label ns1:LiquorStore "LiquorStore")
SubClassOf(ns1:LiquorStore ns1:Store)

# Class: ns1:LiteraryEvent (LiteraryEvent)

AnnotationAssertion(rdfs:comment ns1:LiteraryEvent "Event type: Literary event.")
AnnotationAssertion(rdfs:label ns1:LiteraryEvent "LiteraryEvent")
SubClassOf(ns1:LiteraryEvent ns1:Event)

# Class: ns1:LocalBusiness (LocalBusiness)

AnnotationAssertion(rdfs:comment ns1:LocalBusiness "A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.")
AnnotationAssertion(rdfs:label ns1:LocalBusiness "LocalBusiness")
SubClassOf(ns1:LocalBusiness ns1:Organization)
SubClassOf(ns1:LocalBusiness ns1:Place)

# Class: ns1:Locksmith (Locksmith)

AnnotationAssertion(rdfs:comment ns1:Locksmith "A locksmith.")
AnnotationAssertion(rdfs:label ns1:Locksmith "Locksmith")
SubClassOf(ns1:Locksmith ns1:HomeAndConstructionBusiness)
SubClassOf(ns1:Locksmith ns1:ProfessionalService)

# Class: ns1:LodgingBusiness (LodgingBusiness)

AnnotationAssertion(rdfs:comment ns1:LodgingBusiness "A lodging business, such as a motel, hotel, or inn.")
AnnotationAssertion(rdfs:label ns1:LodgingBusiness "LodgingBusiness")
SubClassOf(ns1:LodgingBusiness ns1:LocalBusiness)

# Class: ns1:Map (Map)

AnnotationAssertion(rdfs:comment ns1:Map "A map.")
AnnotationAssertion(rdfs:label ns1:Map "Map")
SubClassOf(ns1:Map ns1:CreativeWork)

# Class: ns1:Mass (Mass)

AnnotationAssertion(rdfs:comment ns1:Mass "Properties that take Mass as values are of the form '<Number> <Mass unit of measure>'. E.g., '7 kg'")
AnnotationAssertion(rdfs:label ns1:Mass "Mass")
SubClassOf(ns1:Mass ns1:Quantity)

# Class: ns1:MediaObject (MediaObject)

AnnotationAssertion(rdfs:comment ns1:MediaObject "An image, video, or audio object embedded in a web page. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).")
AnnotationAssertion(rdfs:label ns1:MediaObject "MediaObject")
SubClassOf(ns1:MediaObject ns1:CreativeWork)

# Class: ns1:MedicalClinic (MedicalClinic)

AnnotationAssertion(rdfs:comment ns1:MedicalClinic "A medical clinic.")
AnnotationAssertion(rdfs:label ns1:MedicalClinic "MedicalClinic")
SubClassOf(ns1:MedicalClinic ns1:MedicalOrganization)

# Class: ns1:MedicalOrganization (MedicalOrganization)

AnnotationAssertion(rdfs:comment ns1:MedicalOrganization "A medical organization, such as a doctor's office or clinic.")
AnnotationAssertion(rdfs:label ns1:MedicalOrganization "MedicalOrganization")
SubClassOf(ns1:MedicalOrganization ns1:LocalBusiness)

# Class: ns1:MensClothingStore (MensClothingStore)

AnnotationAssertion(rdfs:comment ns1:MensClothingStore "A men's clothing store.")
AnnotationAssertion(rdfs:label ns1:MensClothingStore "MensClothingStore")
SubClassOf(ns1:MensClothingStore ns1:Store)

# Class: ns1:MiddleSchool (MiddleSchool)

AnnotationAssertion(rdfs:comment ns1:MiddleSchool "A middle school.")
AnnotationAssertion(rdfs:label ns1:MiddleSchool "MiddleSchool")
SubClassOf(ns1:MiddleSchool ns1:EducationalOrganization)

# Class: ns1:MobileApplication (MobileApplication)

AnnotationAssertion(rdfs:comment ns1:MobileApplication "")
AnnotationAssertion(rdfs:label ns1:MobileApplication "MobileApplication")
SubClassOf(ns1:MobileApplication ns1:SoftwareApplication)

# Class: ns1:MobilePhoneStore (MobilePhoneStore)

AnnotationAssertion(rdfs:comment ns1:MobilePhoneStore "A mobile-phone store.")
AnnotationAssertion(rdfs:label ns1:MobilePhoneStore "MobilePhoneStore")
SubClassOf(ns1:MobilePhoneStore ns1:Store)

# Class: ns1:Mosque (Mosque)

AnnotationAssertion(rdfs:comment ns1:Mosque "A mosque.")
AnnotationAssertion(rdfs:label ns1:Mosque "Mosque")
SubClassOf(ns1:Mosque ns1:PlaceOfWorship)

# Class: ns1:Motel (Motel)

AnnotationAssertion(rdfs:comment ns1:Motel "A motel.")
AnnotationAssertion(rdfs:label ns1:Motel "Motel")
SubClassOf(ns1:Motel ns1:LodgingBusiness)

# Class: ns1:MotorcycleDealer (MotorcycleDealer)

AnnotationAssertion(rdfs:comment ns1:MotorcycleDealer "A motorcycle dealer.")
AnnotationAssertion(rdfs:label ns1:MotorcycleDealer "MotorcycleDealer")
SubClassOf(ns1:MotorcycleDealer ns1:AutomotiveBusiness)

# Class: ns1:MotorcycleRepair (MotorcycleRepair)

AnnotationAssertion(rdfs:comment ns1:MotorcycleRepair "A motorcycle repair shop.")
AnnotationAssertion(rdfs:label ns1:MotorcycleRepair "MotorcycleRepair")
SubClassOf(ns1:MotorcycleRepair ns1:AutomotiveBusiness)

# Class: ns1:Mountain (Mountain)

AnnotationAssertion(rdfs:comment ns1:Mountain "A mountain, like Mount Whitney or Mount Everest")
AnnotationAssertion(rdfs:label ns1:Mountain "Mountain")
SubClassOf(ns1:Mountain ns1:Landform)

# Class: ns1:Movie (Movie)

AnnotationAssertion(rdfs:comment ns1:Movie "A movie.")
AnnotationAssertion(rdfs:label ns1:Movie "Movie")
SubClassOf(ns1:Movie ns1:CreativeWork)

# Class: ns1:MovieRentalStore (MovieRentalStore)

AnnotationAssertion(rdfs:comment ns1:MovieRentalStore "A movie rental store.")
AnnotationAssertion(rdfs:label ns1:MovieRentalStore "MovieRentalStore")
SubClassOf(ns1:MovieRentalStore ns1:Store)

# Class: ns1:MovieTheater (MovieTheater)

AnnotationAssertion(rdfs:comment ns1:MovieTheater "A movie theater.")
AnnotationAssertion(rdfs:label ns1:MovieTheater "MovieTheater")
SubClassOf(ns1:MovieTheater ns1:CivicStructure)
SubClassOf(ns1:MovieTheater ns1:EntertainmentBusiness)

# Class: ns1:MovingCompany (MovingCompany)

AnnotationAssertion(rdfs:comment ns1:MovingCompany "A moving company.")
AnnotationAssertion(rdfs:label ns1:MovingCompany "MovingCompany")
SubClassOf(ns1:MovingCompany ns1:HomeAndConstructionBusiness)

# Class: ns1:Museum (Museum)

AnnotationAssertion(rdfs:comment ns1:Museum "A museum.")
AnnotationAssertion(rdfs:label ns1:Museum "Museum")
SubClassOf(ns1:Museum ns1:CivicStructure)

# Class: ns1:MusicAlbum (MusicAlbum)

AnnotationAssertion(rdfs:comment ns1:MusicAlbum "A collection of music tracks.")
AnnotationAssertion(rdfs:label ns1:MusicAlbum "MusicAlbum")
SubClassOf(ns1:MusicAlbum ns1:MusicPlaylist)

# Class: ns1:MusicEvent (MusicEvent)

AnnotationAssertion(rdfs:comment ns1:MusicEvent "Event type: Music event.")
AnnotationAssertion(rdfs:label ns1:MusicEvent "MusicEvent")
SubClassOf(ns1:MusicEvent ns1:Event)

# Class: ns1:MusicGroup (MusicGroup)

AnnotationAssertion(rdfs:comment ns1:MusicGroup "A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.")
AnnotationAssertion(rdfs:label ns1:MusicGroup "MusicGroup")
SubClassOf(ns1:MusicGroup ns1:PerformingGroup)

# Class: ns1:MusicPlaylist (MusicPlaylist)

AnnotationAssertion(rdfs:comment ns1:MusicPlaylist "A collection of music tracks in playlist form.")
AnnotationAssertion(rdfs:label ns1:MusicPlaylist "MusicPlaylist")
SubClassOf(ns1:MusicPlaylist ns1:CreativeWork)

# Class: ns1:MusicRecording (MusicRecording)

AnnotationAssertion(rdfs:comment ns1:MusicRecording "A music recording (track), usually a single song.")
AnnotationAssertion(rdfs:label ns1:MusicRecording "MusicRecording")
SubClassOf(ns1:MusicRecording ns1:CreativeWork)

# Class: ns1:MusicStore (MusicStore)

AnnotationAssertion(rdfs:comment ns1:MusicStore "A music store.")
AnnotationAssertion(rdfs:label ns1:MusicStore "MusicStore")
SubClassOf(ns1:MusicStore ns1:Store)

# Class: ns1:MusicVenue (MusicVenue)

AnnotationAssertion(rdfs:comment ns1:MusicVenue "A music venue.")
AnnotationAssertion(rdfs:label ns1:MusicVenue "MusicVenue")
SubClassOf(ns1:MusicVenue ns1:CivicStructure)

# Class: ns1:MusicVideoObject (MusicVideoObject)

AnnotationAssertion(rdfs:comment ns1:MusicVideoObject "A music video file.")
AnnotationAssertion(rdfs:label ns1:MusicVideoObject "MusicVideoObject")
SubClassOf(ns1:MusicVideoObject ns1:MediaObject)

# Class: ns1:NGO (NGO)

AnnotationAssertion(rdfs:comment ns1:NGO "Organization: Non-governmental Organization.")
AnnotationAssertion(rdfs:label ns1:NGO "NGO")
SubClassOf(ns1:NGO ns1:Organization)

# Class: ns1:NailSalon (NailSalon)

AnnotationAssertion(rdfs:comment ns1:NailSalon "A nail salon.")
AnnotationAssertion(rdfs:label ns1:NailSalon "NailSalon")
SubClassOf(ns1:NailSalon ns1:HealthAndBeautyBusiness)

# Class: ns1:NewsArticle (NewsArticle)

AnnotationAssertion(dc:source ns1:NewsArticle <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:NewsArticle "A news article")
AnnotationAssertion(rdfs:label ns1:NewsArticle "NewsArticle")
SubClassOf(ns1:NewsArticle ns1:Article)

# Class: ns1:NightClub (NightClub)

AnnotationAssertion(rdfs:comment ns1:NightClub "A nightclub or discotheque.")
AnnotationAssertion(rdfs:label ns1:NightClub "NightClub")
SubClassOf(ns1:NightClub ns1:EntertainmentBusiness)

# Class: ns1:Notary (Notary)

AnnotationAssertion(rdfs:comment ns1:Notary "A notary.")
AnnotationAssertion(rdfs:label ns1:Notary "Notary")
SubClassOf(ns1:Notary ns1:ProfessionalService)

# Class: ns1:Number (Number)

AnnotationAssertion(rdfs:comment ns1:Number "Data type: Number.")
AnnotationAssertion(rdfs:label ns1:Number "Number")
SubClassOf(ns1:Number ns1:DataType)

# Class: ns1:NutritionInformation (NutritionInformation)

AnnotationAssertion(rdfs:comment ns1:NutritionInformation "Nutritional information about the recipe.")
AnnotationAssertion(rdfs:label ns1:NutritionInformation "NutritionInformation")
SubClassOf(ns1:NutritionInformation ns1:StructuredValue)

# Class: ns1:OceanBodyOfWater (OceanBodyOfWater)

AnnotationAssertion(rdfs:comment ns1:OceanBodyOfWater "An ocean (for example, the Pacific).")
AnnotationAssertion(rdfs:label ns1:OceanBodyOfWater "OceanBodyOfWater")
SubClassOf(ns1:OceanBodyOfWater ns1:BodyOfWater)

# Class: ns1:Offer (Offer)

AnnotationAssertion(rdfs:comment ns1:Offer "An offer to sell an item—for example, an offer to sell a product, the DVD of a movie, or tickets to an event.")
AnnotationAssertion(rdfs:label ns1:Offer "Offer")
SubClassOf(ns1:Offer ns1:Intangible)

# Class: ns1:OfferItemCondition (OfferItemCondition)

AnnotationAssertion(rdfs:comment ns1:OfferItemCondition "A list of possible conditions for the item for sale.")
AnnotationAssertion(rdfs:label ns1:OfferItemCondition "OfferItemCondition")
SubClassOf(ns1:OfferItemCondition ns1:Enumeration)

# Class: ns1:OfficeEquipmentStore (OfficeEquipmentStore)

AnnotationAssertion(rdfs:comment ns1:OfficeEquipmentStore "An office equipment store.")
AnnotationAssertion(rdfs:label ns1:OfficeEquipmentStore "OfficeEquipmentStore")
SubClassOf(ns1:OfficeEquipmentStore ns1:Store)

# Class: ns1:Optician (Optician)

AnnotationAssertion(rdfs:comment ns1:Optician "An optician's store.")
AnnotationAssertion(rdfs:label ns1:Optician "Optician")
SubClassOf(ns1:Optician ns1:MedicalOrganization)

# Class: ns1:Organization (Organization)

AnnotationAssertion(rdfs:comment ns1:Organization "An organization such as a school, NGO, corporation, club, etc.")
AnnotationAssertion(rdfs:label ns1:Organization "Organization")
SubClassOf(ns1:Organization ns1:Thing)

# Class: ns1:OutletStore (OutletStore)

AnnotationAssertion(rdfs:comment ns1:OutletStore "An outlet store.")
AnnotationAssertion(rdfs:label ns1:OutletStore "OutletStore")
SubClassOf(ns1:OutletStore ns1:Store)

# Class: ns1:Painting (Painting)

AnnotationAssertion(rdfs:comment ns1:Painting "A painting.")
AnnotationAssertion(rdfs:label ns1:Painting "Painting")
SubClassOf(ns1:Painting ns1:CreativeWork)

# Class: ns1:Park (Park)

AnnotationAssertion(rdfs:comment ns1:Park "A park.")
AnnotationAssertion(rdfs:label ns1:Park "Park")
SubClassOf(ns1:Park ns1:CivicStructure)

# Class: ns1:ParkingFacility (ParkingFacility)

AnnotationAssertion(rdfs:comment ns1:ParkingFacility "A parking lot or other parking facility.")
AnnotationAssertion(rdfs:label ns1:ParkingFacility "ParkingFacility")
SubClassOf(ns1:ParkingFacility ns1:CivicStructure)

# Class: ns1:PawnShop (PawnShop)

AnnotationAssertion(rdfs:comment ns1:PawnShop "A pawnstore.")
AnnotationAssertion(rdfs:label ns1:PawnShop "PawnShop")
SubClassOf(ns1:PawnShop ns1:Store)

# Class: ns1:PerformingArtsTheater (PerformingArtsTheater)

AnnotationAssertion(rdfs:comment ns1:PerformingArtsTheater "A theatre or other performing art center.")
AnnotationAssertion(rdfs:label ns1:PerformingArtsTheater "PerformingArtsTheater")
SubClassOf(ns1:PerformingArtsTheater ns1:CivicStructure)

# Class: ns1:PerformingGroup (PerformingGroup)

AnnotationAssertion(rdfs:comment ns1:PerformingGroup "A performance group, such as a band, an orchestra, or a circus.")
AnnotationAssertion(rdfs:label ns1:PerformingGroup "PerformingGroup")
SubClassOf(ns1:PerformingGroup ns1:Organization)

# Class: ns1:Person (Person)

AnnotationAssertion(dc:source ns1:Person <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:Person "A person (alive, dead, undead, or fictional).")
AnnotationAssertion(rdfs:label ns1:Person "Person")
SubClassOf(ns1:Person ns1:Thing)

# Class: ns1:PetStore (PetStore)

AnnotationAssertion(rdfs:comment ns1:PetStore "A pet store.")
AnnotationAssertion(rdfs:label ns1:PetStore "PetStore")
SubClassOf(ns1:PetStore ns1:Store)

# Class: ns1:Pharmacy (Pharmacy)

AnnotationAssertion(rdfs:comment ns1:Pharmacy "A pharmacy or drugstore.")
AnnotationAssertion(rdfs:label ns1:Pharmacy "Pharmacy")
SubClassOf(ns1:Pharmacy ns1:MedicalOrganization)

# Class: ns1:Photograph (Photograph)

AnnotationAssertion(rdfs:comment ns1:Photograph "A photograph.")
AnnotationAssertion(rdfs:label ns1:Photograph "Photograph")
SubClassOf(ns1:Photograph ns1:CreativeWork)

# Class: ns1:Physician (Physician)

AnnotationAssertion(rdfs:comment ns1:Physician "A doctor's office.")
AnnotationAssertion(rdfs:label ns1:Physician "Physician")
SubClassOf(ns1:Physician ns1:MedicalOrganization)

# Class: ns1:Place (Place)

AnnotationAssertion(rdfs:comment ns1:Place "Entities that have a somewhat fixed, physical extension.")
AnnotationAssertion(rdfs:label ns1:Place "Place")
SubClassOf(ns1:Place ns1:Thing)

# Class: ns1:PlaceOfWorship (PlaceOfWorship)

AnnotationAssertion(rdfs:comment ns1:PlaceOfWorship "Place of worship, such as a church, synagogue, or mosque.")
AnnotationAssertion(rdfs:label ns1:PlaceOfWorship "PlaceOfWorship")
SubClassOf(ns1:PlaceOfWorship ns1:CivicStructure)

# Class: ns1:Playground (Playground)

AnnotationAssertion(rdfs:comment ns1:Playground "A playground.")
AnnotationAssertion(rdfs:label ns1:Playground "Playground")
SubClassOf(ns1:Playground ns1:CivicStructure)

# Class: ns1:Plumber (Plumber)

AnnotationAssertion(rdfs:comment ns1:Plumber "A plumbing service.")
AnnotationAssertion(rdfs:label ns1:Plumber "Plumber")
SubClassOf(ns1:Plumber ns1:HomeAndConstructionBusiness)
SubClassOf(ns1:Plumber ns1:ProfessionalService)

# Class: ns1:PoliceStation (PoliceStation)

AnnotationAssertion(rdfs:comment ns1:PoliceStation "A police station.")
AnnotationAssertion(rdfs:label ns1:PoliceStation "PoliceStation")
SubClassOf(ns1:PoliceStation ns1:CivicStructure)
SubClassOf(ns1:PoliceStation ns1:EmergencyService)

# Class: ns1:Pond (Pond)

AnnotationAssertion(rdfs:comment ns1:Pond "A pond")
AnnotationAssertion(rdfs:label ns1:Pond "Pond")
SubClassOf(ns1:Pond ns1:BodyOfWater)

# Class: ns1:PostOffice (PostOffice)

AnnotationAssertion(rdfs:comment ns1:PostOffice "A post office.")
AnnotationAssertion(rdfs:label ns1:PostOffice "PostOffice")
SubClassOf(ns1:PostOffice ns1:GovernmentOffice)

# Class: ns1:PostalAddress (PostalAddress)

AnnotationAssertion(rdfs:comment ns1:PostalAddress "The mailing address.")
AnnotationAssertion(rdfs:label ns1:PostalAddress "PostalAddress")
SubClassOf(ns1:PostalAddress ns1:ContactPoint)

# Class: ns1:Preschool (Preschool)

AnnotationAssertion(rdfs:comment ns1:Preschool "A preschool.")
AnnotationAssertion(rdfs:label ns1:Preschool "Preschool")
SubClassOf(ns1:Preschool ns1:EducationalOrganization)

# Class: ns1:Product (Product)

AnnotationAssertion(rdfs:comment ns1:Product "A product is anything that is made available for sale—for example, a pair of shoes, a concert ticket, or a car.")
AnnotationAssertion(rdfs:label ns1:Product "Product")
SubClassOf(ns1:Product ns1:Thing)

# Class: ns1:ProfessionalService (ProfessionalService)

AnnotationAssertion(rdfs:comment ns1:ProfessionalService "Provider of professional services.")
AnnotationAssertion(rdfs:label ns1:ProfessionalService "ProfessionalService")
SubClassOf(ns1:ProfessionalService ns1:LocalBusiness)

# Class: ns1:ProfilePage (ProfilePage)

AnnotationAssertion(rdfs:comment ns1:ProfilePage "Web page type: Profile page.")
AnnotationAssertion(rdfs:label ns1:ProfilePage "ProfilePage")
SubClassOf(ns1:ProfilePage ns1:WebPage)

# Class: ns1:PublicSwimmingPool (PublicSwimmingPool)

AnnotationAssertion(rdfs:comment ns1:PublicSwimmingPool "A public swimming pool.")
AnnotationAssertion(rdfs:label ns1:PublicSwimmingPool "PublicSwimmingPool")
SubClassOf(ns1:PublicSwimmingPool ns1:SportsActivityLocation)

# Class: ns1:Quantity (Quantity)

AnnotationAssertion(rdfs:comment ns1:Quantity "Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.")
AnnotationAssertion(rdfs:label ns1:Quantity "Quantity")
SubClassOf(ns1:Quantity ns1:Intangible)

# Class: ns1:RVPark (RVPark)

AnnotationAssertion(rdfs:comment ns1:RVPark "An RV park.")
AnnotationAssertion(rdfs:label ns1:RVPark "RVPark")
SubClassOf(ns1:RVPark ns1:CivicStructure)

# Class: ns1:RadioStation (RadioStation)

AnnotationAssertion(rdfs:comment ns1:RadioStation "A radio station.")
AnnotationAssertion(rdfs:label ns1:RadioStation "RadioStation")
SubClassOf(ns1:RadioStation ns1:LocalBusiness)

# Class: ns1:Rating (Rating)

AnnotationAssertion(rdfs:comment ns1:Rating "The rating of the video.")
AnnotationAssertion(rdfs:label ns1:Rating "Rating")
SubClassOf(ns1:Rating ns1:Intangible)

# Class: ns1:RealEstateAgent (RealEstateAgent)

AnnotationAssertion(rdfs:comment ns1:RealEstateAgent "A real-estate agent.")
AnnotationAssertion(rdfs:label ns1:RealEstateAgent "RealEstateAgent")
SubClassOf(ns1:RealEstateAgent ns1:LocalBusiness)

# Class: ns1:Recipe (Recipe)

AnnotationAssertion(rdfs:comment ns1:Recipe "A recipe.")
AnnotationAssertion(rdfs:label ns1:Recipe "Recipe")
SubClassOf(ns1:Recipe ns1:CreativeWork)

# Class: ns1:RecyclingCenter (RecyclingCenter)

AnnotationAssertion(rdfs:comment ns1:RecyclingCenter "A recycling center.")
AnnotationAssertion(rdfs:label ns1:RecyclingCenter "RecyclingCenter")
SubClassOf(ns1:RecyclingCenter ns1:LocalBusiness)

# Class: ns1:Reservoir (Reservoir)

AnnotationAssertion(rdfs:comment ns1:Reservoir "A reservoir, like the Lake Kariba reservoir.")
AnnotationAssertion(rdfs:label ns1:Reservoir "Reservoir")
SubClassOf(ns1:Reservoir ns1:BodyOfWater)

# Class: ns1:Residence (Residence)

AnnotationAssertion(rdfs:comment ns1:Residence "The place where a person lives.")
AnnotationAssertion(rdfs:label ns1:Residence "Residence")
SubClassOf(ns1:Residence ns1:Place)

# Class: ns1:Restaurant (Restaurant)

AnnotationAssertion(rdfs:comment ns1:Restaurant "A restaurant.")
AnnotationAssertion(rdfs:label ns1:Restaurant "Restaurant")
SubClassOf(ns1:Restaurant ns1:FoodEstablishment)

# Class: ns1:Review (Review)

AnnotationAssertion(rdfs:comment ns1:Review "A review of an item - for example, a restaurant, movie, or store.")
AnnotationAssertion(rdfs:label ns1:Review "Review")
SubClassOf(ns1:Review ns1:CreativeWork)

# Class: ns1:RiverBodyOfWater (RiverBodyOfWater)

AnnotationAssertion(rdfs:comment ns1:RiverBodyOfWater "A river (for example, the broad majestic Shannon).")
AnnotationAssertion(rdfs:label ns1:RiverBodyOfWater "RiverBodyOfWater")
SubClassOf(ns1:RiverBodyOfWater ns1:BodyOfWater)

# Class: ns1:RoofingContractor (RoofingContractor)

AnnotationAssertion(rdfs:comment ns1:RoofingContractor "A roofing contractor.")
AnnotationAssertion(rdfs:label ns1:RoofingContractor "RoofingContractor")
SubClassOf(ns1:RoofingContractor ns1:HomeAndConstructionBusiness)
SubClassOf(ns1:RoofingContractor ns1:ProfessionalService)

# Class: ns1:SaleEvent (SaleEvent)

AnnotationAssertion(rdfs:comment ns1:SaleEvent "Event type: Sales event.")
AnnotationAssertion(rdfs:label ns1:SaleEvent "SaleEvent")
SubClassOf(ns1:SaleEvent ns1:Event)

# Class: ns1:ScholarlyArticle (ScholarlyArticle)

AnnotationAssertion(rdfs:comment ns1:ScholarlyArticle "A scholarly article.")
AnnotationAssertion(rdfs:label ns1:ScholarlyArticle "ScholarlyArticle")
SubClassOf(ns1:ScholarlyArticle ns1:Article)

# Class: ns1:School (School)

AnnotationAssertion(rdfs:comment ns1:School "A school.")
AnnotationAssertion(rdfs:label ns1:School "School")
SubClassOf(ns1:School ns1:EducationalOrganization)

# Class: ns1:Sculpture (Sculpture)

AnnotationAssertion(rdfs:comment ns1:Sculpture "A piece of sculpture.")
AnnotationAssertion(rdfs:label ns1:Sculpture "Sculpture")
SubClassOf(ns1:Sculpture ns1:CreativeWork)

# Class: ns1:SeaBodyOfWater (SeaBodyOfWater)

AnnotationAssertion(rdfs:comment ns1:SeaBodyOfWater "A sea (for example, the Caspian sea).")
AnnotationAssertion(rdfs:label ns1:SeaBodyOfWater "SeaBodyOfWater")
SubClassOf(ns1:SeaBodyOfWater ns1:BodyOfWater)

# Class: ns1:SearchResultsPage (SearchResultsPage)

AnnotationAssertion(rdfs:comment ns1:SearchResultsPage "Web page type: Search results page.")
AnnotationAssertion(rdfs:label ns1:SearchResultsPage "SearchResultsPage")
SubClassOf(ns1:SearchResultsPage ns1:WebPage)

# Class: ns1:SelfStorage (SelfStorage)

AnnotationAssertion(rdfs:comment ns1:SelfStorage "Self-storage facility.")
AnnotationAssertion(rdfs:label ns1:SelfStorage "SelfStorage")
SubClassOf(ns1:SelfStorage ns1:LocalBusiness)

# Class: ns1:ShoeStore (ShoeStore)

AnnotationAssertion(rdfs:comment ns1:ShoeStore "A shoe store.")
AnnotationAssertion(rdfs:label ns1:ShoeStore "ShoeStore")
SubClassOf(ns1:ShoeStore ns1:Store)

# Class: ns1:ShoppingCenter (ShoppingCenter)

AnnotationAssertion(rdfs:comment ns1:ShoppingCenter "A shopping center or mall.")
AnnotationAssertion(rdfs:label ns1:ShoppingCenter "ShoppingCenter")
SubClassOf(ns1:ShoppingCenter ns1:LocalBusiness)

# Class: ns1:SingleFamilyResidence (SingleFamilyResidence)

AnnotationAssertion(rdfs:comment ns1:SingleFamilyResidence "Residence type: Single-family home.")
AnnotationAssertion(rdfs:label ns1:SingleFamilyResidence "SingleFamilyResidence")
SubClassOf(ns1:SingleFamilyResidence ns1:Residence)

# Class: ns1:SiteNavigationElement (SiteNavigationElement)

AnnotationAssertion(rdfs:comment ns1:SiteNavigationElement "A navigation element of the page.")
AnnotationAssertion(rdfs:label ns1:SiteNavigationElement "SiteNavigationElement")
SubClassOf(ns1:SiteNavigationElement ns1:WebPageElement)

# Class: ns1:SkiResort (SkiResort)

AnnotationAssertion(rdfs:comment ns1:SkiResort "A ski resort.")
AnnotationAssertion(rdfs:label ns1:SkiResort "SkiResort")
SubClassOf(ns1:SkiResort ns1:SportsActivityLocation)

# Class: ns1:SocialEvent (SocialEvent)

AnnotationAssertion(rdfs:comment ns1:SocialEvent "Event type: Social event.")
AnnotationAssertion(rdfs:label ns1:SocialEvent "SocialEvent")
SubClassOf(ns1:SocialEvent ns1:Event)

# Class: ns1:SoftwareApplication (SoftwareApplication)

AnnotationAssertion(rdfs:comment ns1:SoftwareApplication "A software application.")
AnnotationAssertion(rdfs:label ns1:SoftwareApplication "SoftwareApplication")
SubClassOf(ns1:SoftwareApplication ns1:CreativeWork)

# Class: ns1:SportingGoodsStore (SportingGoodsStore)

AnnotationAssertion(rdfs:comment ns1:SportingGoodsStore "A sporting goods store.")
AnnotationAssertion(rdfs:label ns1:SportingGoodsStore "SportingGoodsStore")
SubClassOf(ns1:SportingGoodsStore ns1:Store)

# Class: ns1:SportsActivityLocation (SportsActivityLocation)

AnnotationAssertion(rdfs:comment ns1:SportsActivityLocation "A sports location, such as a playing field.")
AnnotationAssertion(rdfs:label ns1:SportsActivityLocation "SportsActivityLocation")
SubClassOf(ns1:SportsActivityLocation ns1:LocalBusiness)

# Class: ns1:SportsClub (SportsClub)

AnnotationAssertion(rdfs:comment ns1:SportsClub "A sports club.")
AnnotationAssertion(rdfs:label ns1:SportsClub "SportsClub")
SubClassOf(ns1:SportsClub ns1:SportsActivityLocation)

# Class: ns1:SportsEvent (SportsEvent)

AnnotationAssertion(rdfs:comment ns1:SportsEvent "Event type: Sports event.")
AnnotationAssertion(rdfs:label ns1:SportsEvent "SportsEvent")
SubClassOf(ns1:SportsEvent ns1:Event)

# Class: ns1:SportsTeam (SportsTeam)

AnnotationAssertion(rdfs:comment ns1:SportsTeam "Organization: Sports team.")
AnnotationAssertion(rdfs:label ns1:SportsTeam "SportsTeam")
SubClassOf(ns1:SportsTeam ns1:Organization)

# Class: ns1:StadiumOrArena (StadiumOrArena)

AnnotationAssertion(rdfs:comment ns1:StadiumOrArena "A stadium.")
AnnotationAssertion(rdfs:label ns1:StadiumOrArena "StadiumOrArena")
SubClassOf(ns1:StadiumOrArena ns1:CivicStructure)
SubClassOf(ns1:StadiumOrArena ns1:SportsActivityLocation)

# Class: ns1:State (State)

AnnotationAssertion(rdfs:comment ns1:State "A state or province.")
AnnotationAssertion(rdfs:label ns1:State "State")
SubClassOf(ns1:State ns1:AdministrativeArea)

# Class: ns1:Store (Store)

AnnotationAssertion(rdfs:comment ns1:Store "A retail good store.")
AnnotationAssertion(rdfs:label ns1:Store "Store")
SubClassOf(ns1:Store ns1:LocalBusiness)

# Class: ns1:StructuredValue (StructuredValue)

AnnotationAssertion(rdfs:comment ns1:StructuredValue "Structured values are strings—for example, addresses—that have certain constraints on their structure.")
AnnotationAssertion(rdfs:label ns1:StructuredValue "StructuredValue")
SubClassOf(ns1:StructuredValue ns1:Intangible)

# Class: ns1:SubwayStation (SubwayStation)

AnnotationAssertion(rdfs:comment ns1:SubwayStation "A subway station.")
AnnotationAssertion(rdfs:label ns1:SubwayStation "SubwayStation")
SubClassOf(ns1:SubwayStation ns1:CivicStructure)

# Class: ns1:Synagogue (Synagogue)

AnnotationAssertion(rdfs:comment ns1:Synagogue "A synagogue.")
AnnotationAssertion(rdfs:label ns1:Synagogue "Synagogue")
SubClassOf(ns1:Synagogue ns1:PlaceOfWorship)

# Class: ns1:TVEpisode (TVEpisode)

AnnotationAssertion(rdfs:comment ns1:TVEpisode "An episode of a TV series or season.")
AnnotationAssertion(rdfs:label ns1:TVEpisode "TVEpisode")
SubClassOf(ns1:TVEpisode ns1:CreativeWork)

# Class: ns1:TVSeason (TVSeason)

AnnotationAssertion(rdfs:comment ns1:TVSeason "A TV season.")
AnnotationAssertion(rdfs:label ns1:TVSeason "TVSeason")
SubClassOf(ns1:TVSeason ns1:CreativeWork)

# Class: ns1:TVSeries (TVSeries)

AnnotationAssertion(rdfs:comment ns1:TVSeries "A television series.")
AnnotationAssertion(rdfs:label ns1:TVSeries "TVSeries")
SubClassOf(ns1:TVSeries ns1:CreativeWork)

# Class: ns1:Table (Table)

AnnotationAssertion(rdfs:comment ns1:Table "A table on the page.")
AnnotationAssertion(rdfs:label ns1:Table "Table")
SubClassOf(ns1:Table ns1:WebPageElement)

# Class: ns1:TattooParlor (TattooParlor)

AnnotationAssertion(rdfs:comment ns1:TattooParlor "A tattoo parlor.")
AnnotationAssertion(rdfs:label ns1:TattooParlor "TattooParlor")
SubClassOf(ns1:TattooParlor ns1:HealthAndBeautyBusiness)

# Class: ns1:TaxiStand (TaxiStand)

AnnotationAssertion(rdfs:comment ns1:TaxiStand "A taxi stand.")
AnnotationAssertion(rdfs:label ns1:TaxiStand "TaxiStand")
SubClassOf(ns1:TaxiStand ns1:CivicStructure)

# Class: ns1:TelevisionStation (TelevisionStation)

AnnotationAssertion(rdfs:comment ns1:TelevisionStation "A television station.")
AnnotationAssertion(rdfs:label ns1:TelevisionStation "TelevisionStation")
SubClassOf(ns1:TelevisionStation ns1:LocalBusiness)

# Class: ns1:TennisComplex (TennisComplex)

AnnotationAssertion(rdfs:comment ns1:TennisComplex "A tennis complex.")
AnnotationAssertion(rdfs:label ns1:TennisComplex "TennisComplex")
SubClassOf(ns1:TennisComplex ns1:SportsActivityLocation)

# Class: ns1:Text (Text)

AnnotationAssertion(rdfs:comment ns1:Text "Data type: Text.")
AnnotationAssertion(rdfs:label ns1:Text "Text")
SubClassOf(ns1:Text ns1:DataType)

# Class: ns1:TheaterEvent (TheaterEvent)

AnnotationAssertion(rdfs:comment ns1:TheaterEvent "Event type: Theater performance.")
AnnotationAssertion(rdfs:label ns1:TheaterEvent "TheaterEvent")
SubClassOf(ns1:TheaterEvent ns1:Event)

# Class: ns1:TheaterGroup (TheaterGroup)

AnnotationAssertion(rdfs:comment ns1:TheaterGroup "A theater group or company—for example, the Royal Shakespeare Company or Druid Theatre.")
AnnotationAssertion(rdfs:label ns1:TheaterGroup "TheaterGroup")
SubClassOf(ns1:TheaterGroup ns1:PerformingGroup)

# Class: ns1:Thing (Thing)

AnnotationAssertion(rdfs:comment ns1:Thing "The most generic type of item.")
AnnotationAssertion(rdfs:label ns1:Thing "Thing")

# Class: ns1:TireShop (TireShop)

AnnotationAssertion(rdfs:comment ns1:TireShop "A tire shop.")
AnnotationAssertion(rdfs:label ns1:TireShop "TireShop")
SubClassOf(ns1:TireShop ns1:Store)

# Class: ns1:TouristAttraction (TouristAttraction)

AnnotationAssertion(rdfs:comment ns1:TouristAttraction "A tourist attraction.")
AnnotationAssertion(rdfs:label ns1:TouristAttraction "TouristAttraction")
SubClassOf(ns1:TouristAttraction ns1:Place)

# Class: ns1:TouristInformationCenter (TouristInformationCenter)

AnnotationAssertion(rdfs:comment ns1:TouristInformationCenter "A tourist information center.")
AnnotationAssertion(rdfs:label ns1:TouristInformationCenter "TouristInformationCenter")
SubClassOf(ns1:TouristInformationCenter ns1:LocalBusiness)

# Class: ns1:ToyStore (ToyStore)

AnnotationAssertion(rdfs:comment ns1:ToyStore "A toystore.")
AnnotationAssertion(rdfs:label ns1:ToyStore "ToyStore")
SubClassOf(ns1:ToyStore ns1:Store)

# Class: ns1:TrainStation (TrainStation)

AnnotationAssertion(rdfs:comment ns1:TrainStation "A train station.")
AnnotationAssertion(rdfs:label ns1:TrainStation "TrainStation")
SubClassOf(ns1:TrainStation ns1:CivicStructure)

# Class: ns1:TravelAgency (TravelAgency)

AnnotationAssertion(rdfs:comment ns1:TravelAgency "A travel agency.")
AnnotationAssertion(rdfs:label ns1:TravelAgency "TravelAgency")
SubClassOf(ns1:TravelAgency ns1:LocalBusiness)

# Class: ns1:URL (URL)

AnnotationAssertion(rdfs:comment ns1:URL "Data type: URL.")
AnnotationAssertion(rdfs:label ns1:URL "URL")
SubClassOf(ns1:URL ns1:Text)

# Class: ns1:UserBlocks (UserBlocks)

AnnotationAssertion(rdfs:comment ns1:UserBlocks "User interaction: Block this content.")
AnnotationAssertion(rdfs:label ns1:UserBlocks "UserBlocks")
SubClassOf(ns1:UserBlocks ns1:UserInteraction)

# Class: ns1:UserCheckins (UserCheckins)

AnnotationAssertion(rdfs:comment ns1:UserCheckins "User interaction: Check-in at a place.")
AnnotationAssertion(rdfs:label ns1:UserCheckins "UserCheckins")
SubClassOf(ns1:UserCheckins ns1:UserInteraction)

# Class: ns1:UserComments (UserComments)

AnnotationAssertion(dc:source ns1:UserComments <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:UserComments "The UserInteraction event in which a user comments on an item.")
AnnotationAssertion(rdfs:label ns1:UserComments "UserComments")
SubClassOf(ns1:UserComments ns1:UserInteraction)

# Class: ns1:UserDownloads (UserDownloads)

AnnotationAssertion(rdfs:comment ns1:UserDownloads "User interaction: Download of an item.")
AnnotationAssertion(rdfs:label ns1:UserDownloads "UserDownloads")
SubClassOf(ns1:UserDownloads ns1:UserInteraction)

# Class: ns1:UserInteraction (UserInteraction)

AnnotationAssertion(rdfs:comment ns1:UserInteraction "A user interacting with a page")
AnnotationAssertion(rdfs:label ns1:UserInteraction "UserInteraction")
SubClassOf(ns1:UserInteraction ns1:Event)

# Class: ns1:UserLikes (UserLikes)

AnnotationAssertion(rdfs:comment ns1:UserLikes "User interaction: Like an item.")
AnnotationAssertion(rdfs:label ns1:UserLikes "UserLikes")
SubClassOf(ns1:UserLikes ns1:UserInteraction)

# Class: ns1:UserPageVisits (UserPageVisits)

AnnotationAssertion(rdfs:comment ns1:UserPageVisits "User interaction: Visit to a web page.")
AnnotationAssertion(rdfs:label ns1:UserPageVisits "UserPageVisits")
SubClassOf(ns1:UserPageVisits ns1:UserInteraction)

# Class: ns1:UserPlays (UserPlays)

AnnotationAssertion(rdfs:comment ns1:UserPlays "User interaction: Play count of an item, for example a video or a song.")
AnnotationAssertion(rdfs:label ns1:UserPlays "UserPlays")
SubClassOf(ns1:UserPlays ns1:UserInteraction)

# Class: ns1:UserPlusOnes (UserPlusOnes)

AnnotationAssertion(rdfs:comment ns1:UserPlusOnes "User interaction: +1.")
AnnotationAssertion(rdfs:label ns1:UserPlusOnes "UserPlusOnes")
SubClassOf(ns1:UserPlusOnes ns1:UserInteraction)

# Class: ns1:UserTweets (UserTweets)

AnnotationAssertion(rdfs:comment ns1:UserTweets "User interaction: Tweets.")
AnnotationAssertion(rdfs:label ns1:UserTweets "UserTweets")
SubClassOf(ns1:UserTweets ns1:UserInteraction)

# Class: ns1:VeterinaryCare (VeterinaryCare)

AnnotationAssertion(rdfs:comment ns1:VeterinaryCare "A vet's office.")
AnnotationAssertion(rdfs:label ns1:VeterinaryCare "VeterinaryCare")
SubClassOf(ns1:VeterinaryCare ns1:MedicalOrganization)

# Class: ns1:VideoGallery (VideoGallery)

AnnotationAssertion(rdfs:comment ns1:VideoGallery "Web page type: Video gallery page.")
AnnotationAssertion(rdfs:label ns1:VideoGallery "VideoGallery")
SubClassOf(ns1:VideoGallery ns1:CollectionPage)

# Class: ns1:VideoObject (VideoObject)

AnnotationAssertion(dc:source ns1:VideoObject <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>)
AnnotationAssertion(rdfs:comment ns1:VideoObject "A video file.")
AnnotationAssertion(rdfs:label ns1:VideoObject "VideoObject")
SubClassOf(ns1:VideoObject ns1:MediaObject)

# Class: ns1:VisualArtsEvent (VisualArtsEvent)

AnnotationAssertion(rdfs:comment ns1:VisualArtsEvent "Event type: Visual arts event.")
AnnotationAssertion(rdfs:label ns1:VisualArtsEvent "VisualArtsEvent")
SubClassOf(ns1:VisualArtsEvent ns1:Event)

# Class: ns1:Volcano (Volcano)

AnnotationAssertion(rdfs:comment ns1:Volcano "A volcano, like Fuji san")
AnnotationAssertion(rdfs:label ns1:Volcano "Volcano")
SubClassOf(ns1:Volcano ns1:Landform)

# Class: ns1:WPAdBlock (WPAdBlock)

AnnotationAssertion(rdfs:comment ns1:WPAdBlock "An advertising section of the page.")
AnnotationAssertion(rdfs:label ns1:WPAdBlock "WPAdBlock")
SubClassOf(ns1:WPAdBlock ns1:WebPageElement)

# Class: ns1:WPFooter (WPFooter)

AnnotationAssertion(rdfs:comment ns1:WPFooter "The footer section of the page.")
AnnotationAssertion(rdfs:label ns1:WPFooter "WPFooter")
SubClassOf(ns1:WPFooter ns1:WebPageElement)

# Class: ns1:WPHeader (WPHeader)

AnnotationAssertion(rdfs:comment ns1:WPHeader "The header section of the page.")
AnnotationAssertion(rdfs:label ns1:WPHeader "WPHeader")
SubClassOf(ns1:WPHeader ns1:WebPageElement)

# Class: ns1:WPSideBar (WPSideBar)

AnnotationAssertion(rdfs:comment ns1:WPSideBar "A sidebar section of the page.")
AnnotationAssertion(rdfs:label ns1:WPSideBar "WPSideBar")
SubClassOf(ns1:WPSideBar ns1:WebPageElement)

# Class: ns1:Waterfall (Waterfall)

AnnotationAssertion(rdfs:comment ns1:Waterfall "A waterfall, like Niagara")
AnnotationAssertion(rdfs:label ns1:Waterfall "Waterfall")
SubClassOf(ns1:Waterfall ns1:BodyOfWater)

# Class: ns1:WebApplication (WebApplication)

AnnotationAssertion(rdfs:comment ns1:WebApplication "Web applications.")
AnnotationAssertion(rdfs:label ns1:WebApplication "WebApplication")
SubClassOf(ns1:WebApplication ns1:SoftwareApplication)

# Class: ns1:WebPage (WebPage)

AnnotationAssertion(rdfs:comment ns1:WebPage "A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as breadcrumb may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page")
AnnotationAssertion(rdfs:label ns1:WebPage "WebPage")
SubClassOf(ns1:WebPage ns1:CreativeWork)

# Class: ns1:WebPageElement (WebPageElement)

AnnotationAssertion(rdfs:comment ns1:WebPageElement "A web page element, like a table or an image")
AnnotationAssertion(rdfs:label ns1:WebPageElement "WebPageElement")
SubClassOf(ns1:WebPageElement ns1:CreativeWork)

# Class: ns1:WholesaleStore (WholesaleStore)

AnnotationAssertion(rdfs:comment ns1:WholesaleStore "A wholesale store.")
AnnotationAssertion(rdfs:label ns1:WholesaleStore "WholesaleStore")
SubClassOf(ns1:WholesaleStore ns1:Store)

# Class: ns1:Winery (Winery)

AnnotationAssertion(rdfs:comment ns1:Winery "A winery.")
AnnotationAssertion(rdfs:label ns1:Winery "Winery")
SubClassOf(ns1:Winery ns1:FoodEstablishment)

# Class: ns1:Zoo (Zoo)

AnnotationAssertion(rdfs:comment ns1:Zoo "A zoo.")
AnnotationAssertion(rdfs:label ns1:Zoo "Zoo")
SubClassOf(ns1:Zoo ns1:CivicStructure)


AnnotationAssertion(ns1:domain ns1:about ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:about ns1:Thing)
AnnotationAssertion(rdfs:comment ns1:about "The subject matter of the content.")
AnnotationAssertion(rdfs:label ns1:about "about")
AnnotationAssertion(ns1:domain ns1:acceptsReservations ns1:FoodEstablishment)
AnnotationAssertion(ns1:range ns1:acceptsReservations ns1:Text)
AnnotationAssertion(ns1:range ns1:acceptsReservations ns1:URL)
AnnotationAssertion(rdfs:comment ns1:acceptsReservations "Either Yes/No, or a URL at which reservations can be made.")
AnnotationAssertion(rdfs:label ns1:acceptsReservations "acceptsReservations")
AnnotationAssertion(ns1:domain ns1:accountablePerson ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:accountablePerson ns1:Person)
AnnotationAssertion(rdfs:comment ns1:accountablePerson "Specifies the Person that is legally accountable for the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:accountablePerson "accountablePerson")
AnnotationAssertion(ns1:domain ns1:actor ns1:Movie)
AnnotationAssertion(ns1:domain ns1:actor ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:actor ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:actor ns1:Person)
AnnotationAssertion(rdfs:comment ns1:actor "A cast member of the movie, TV series, season, or episode, or video.")
AnnotationAssertion(rdfs:label ns1:actor "actor")
AnnotationAssertion(ns1:domain ns1:actors ns1:Movie)
AnnotationAssertion(ns1:domain ns1:actors ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:actors ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:actors ns1:Person)
AnnotationAssertion(rdfs:comment ns1:actors "A cast member of the movie, TV series, season, or episode, or video. (legacy spelling; see singular form, actor)")
AnnotationAssertion(rdfs:label ns1:actors "actors")
AnnotationAssertion(ns1:domain ns1:additionalName ns1:Person)
AnnotationAssertion(ns1:range ns1:additionalName ns1:Text)
AnnotationAssertion(rdfs:comment ns1:additionalName "An additional name for a Person, can be used for a middle name.")
AnnotationAssertion(rdfs:label ns1:additionalName "additionalName")
AnnotationAssertion(ns1:domain ns1:address ns1:Organization)
AnnotationAssertion(ns1:domain ns1:address ns1:Person)
AnnotationAssertion(ns1:domain ns1:address ns1:Place)
AnnotationAssertion(ns1:range ns1:address ns1:PostalAddress)
AnnotationAssertion(rdfs:comment ns1:address "Physical address of the item.")
AnnotationAssertion(rdfs:label ns1:address "address")
AnnotationAssertion(ns1:domain ns1:addressCountry ns1:PostalAddress)
AnnotationAssertion(ns1:range ns1:addressCountry ns1:Country)
AnnotationAssertion(rdfs:comment ns1:addressCountry "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.")
AnnotationAssertion(rdfs:label ns1:addressCountry "addressCountry")
AnnotationAssertion(ns1:domain ns1:addressLocality ns1:PostalAddress)
AnnotationAssertion(ns1:range ns1:addressLocality ns1:Text)
AnnotationAssertion(rdfs:comment ns1:addressLocality "The locality. For example, Mountain View.")
AnnotationAssertion(rdfs:label ns1:addressLocality "addressLocality")
AnnotationAssertion(ns1:domain ns1:addressRegion ns1:PostalAddress)
AnnotationAssertion(ns1:range ns1:addressRegion ns1:Text)
AnnotationAssertion(rdfs:comment ns1:addressRegion "The region. For example, CA.")
AnnotationAssertion(rdfs:label ns1:addressRegion "addressRegion")
AnnotationAssertion(ns1:domain ns1:affiliation ns1:Person)
AnnotationAssertion(ns1:range ns1:affiliation ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:affiliation "An organization that this person is affiliated with. For example, a school/university, a club, or a team.")
AnnotationAssertion(rdfs:label ns1:affiliation "affiliation")
AnnotationAssertion(ns1:domain ns1:aggregateRating ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:aggregateRating ns1:Offer)
AnnotationAssertion(ns1:domain ns1:aggregateRating ns1:Organization)
AnnotationAssertion(ns1:domain ns1:aggregateRating ns1:Place)
AnnotationAssertion(ns1:domain ns1:aggregateRating ns1:Product)
AnnotationAssertion(ns1:range ns1:aggregateRating ns1:AggregateRating)
AnnotationAssertion(rdfs:comment ns1:aggregateRating "The overall rating, based on a collection of reviews or ratings, of the item.")
AnnotationAssertion(rdfs:label ns1:aggregateRating "aggregateRating")
AnnotationAssertion(ns1:domain ns1:album ns1:MusicGroup)
AnnotationAssertion(ns1:range ns1:album ns1:MusicAlbum)
AnnotationAssertion(rdfs:comment ns1:album "A music album.")
AnnotationAssertion(rdfs:label ns1:album "album")
AnnotationAssertion(ns1:domain ns1:albums ns1:MusicGroup)
AnnotationAssertion(ns1:range ns1:albums ns1:MusicAlbum)
AnnotationAssertion(rdfs:comment ns1:albums "A collection of music albums (legacy spelling; see singular form, album).")
AnnotationAssertion(rdfs:label ns1:albums "albums")
AnnotationAssertion(ns1:domain ns1:alternativeHeadline ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:alternativeHeadline ns1:Text)
AnnotationAssertion(rdfs:comment ns1:alternativeHeadline "A secondary title of the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:alternativeHeadline "alternativeHeadline")
AnnotationAssertion(ns1:domain ns1:alumni ns1:EducationalOrganization)
AnnotationAssertion(ns1:range ns1:alumni ns1:Person)
AnnotationAssertion(rdfs:comment ns1:alumni "Alumni of educational organization.")
AnnotationAssertion(rdfs:label ns1:alumni "alumni")
AnnotationAssertion(ns1:domain ns1:alumniOf ns1:Person)
AnnotationAssertion(ns1:range ns1:alumniOf ns1:EducationalOrganization)
AnnotationAssertion(rdfs:comment ns1:alumniOf "An educational organizations that the person is an alumni of.")
AnnotationAssertion(rdfs:label ns1:alumniOf "alumniOf")
AnnotationAssertion(ns1:domain ns1:applicationCategory ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:applicationCategory ns1:Text)
AnnotationAssertion(ns1:range ns1:applicationCategory ns1:URL)
AnnotationAssertion(rdfs:comment ns1:applicationCategory "Type of software application, e.g. \"Game, Multimedia\".")
AnnotationAssertion(rdfs:label ns1:applicationCategory "applicationCategory")
AnnotationAssertion(ns1:domain ns1:applicationSubCategory ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:applicationSubCategory ns1:Text)
AnnotationAssertion(ns1:range ns1:applicationSubCategory ns1:URL)
AnnotationAssertion(rdfs:comment ns1:applicationSubCategory "Subcategory of the application, e.g. \"Arcade Game\".")
AnnotationAssertion(rdfs:label ns1:applicationSubCategory "applicationSubCategory")
AnnotationAssertion(ns1:domain ns1:applicationSuite ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:applicationSuite ns1:Text)
AnnotationAssertion(rdfs:comment ns1:applicationSuite "The name of the application suite to which the application belongs (e.g. Excel belongs to Office)")
AnnotationAssertion(rdfs:label ns1:applicationSuite "applicationSuite")
AnnotationAssertion(ns1:domain ns1:articleBody ns1:Article)
AnnotationAssertion(ns1:range ns1:articleBody ns1:Text)
AnnotationAssertion(rdfs:comment ns1:articleBody "The actual body of the article.")
AnnotationAssertion(rdfs:label ns1:articleBody "articleBody")
AnnotationAssertion(ns1:domain ns1:articleSection ns1:Article)
AnnotationAssertion(ns1:range ns1:articleSection ns1:Text)
AnnotationAssertion(rdfs:comment ns1:articleSection "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.")
AnnotationAssertion(rdfs:label ns1:articleSection "articleSection")
AnnotationAssertion(ns1:domain ns1:associatedArticle ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:associatedArticle ns1:NewsArticle)
AnnotationAssertion(rdfs:comment ns1:associatedArticle "A NewsArticle associated with the Media Object.")
AnnotationAssertion(rdfs:label ns1:associatedArticle "associatedArticle")
AnnotationAssertion(ns1:domain ns1:associatedMedia ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:associatedMedia ns1:MediaObject)
AnnotationAssertion(rdfs:comment ns1:associatedMedia "The media objects that encode this creative work. This property is a synonym for encodings.")
AnnotationAssertion(rdfs:label ns1:associatedMedia "associatedMedia")
AnnotationAssertion(ns1:domain ns1:attendee ns1:Event)
AnnotationAssertion(ns1:range ns1:attendee ns1:Organization)
AnnotationAssertion(ns1:range ns1:attendee ns1:Person)
AnnotationAssertion(rdfs:comment ns1:attendee "A person or organization attending the event.")
AnnotationAssertion(rdfs:label ns1:attendee "attendee")
AnnotationAssertion(ns1:domain ns1:attendees ns1:Event)
AnnotationAssertion(ns1:range ns1:attendees ns1:Organization)
AnnotationAssertion(ns1:range ns1:attendees ns1:Person)
AnnotationAssertion(rdfs:comment ns1:attendees "A person attending the event (legacy spelling; see singular form, attendee).")
AnnotationAssertion(rdfs:label ns1:attendees "attendees")
AnnotationAssertion(ns1:domain ns1:audio ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:audio ns1:AudioObject)
AnnotationAssertion(rdfs:comment ns1:audio "An embedded audio object.")
AnnotationAssertion(rdfs:label ns1:audio "audio")
AnnotationAssertion(ns1:domain ns1:author ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:author ns1:Organization)
AnnotationAssertion(ns1:range ns1:author ns1:Person)
AnnotationAssertion(rdfs:comment ns1:author "The author of this content. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.")
AnnotationAssertion(rdfs:label ns1:author "author")
AnnotationAssertion(ns1:domain ns1:availability ns1:Offer)
AnnotationAssertion(ns1:range ns1:availability ns1:ItemAvailability)
AnnotationAssertion(rdfs:comment ns1:availability "The availability of this item—for example In stock, Out of stock, Pre-order, etc.")
AnnotationAssertion(rdfs:label ns1:availability "availability")
AnnotationAssertion(ns1:domain ns1:award ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:award ns1:Person)
AnnotationAssertion(ns1:range ns1:award ns1:Text)
AnnotationAssertion(rdfs:comment ns1:award "An award won by this person or for this creative work.")
AnnotationAssertion(rdfs:label ns1:award "award")
AnnotationAssertion(ns1:domain ns1:awards ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:awards ns1:Person)
AnnotationAssertion(ns1:range ns1:awards ns1:Text)
AnnotationAssertion(rdfs:comment ns1:awards "Awards won by this person or for this creative work. (legacy spelling; see singular form, award)")
AnnotationAssertion(rdfs:label ns1:awards "awards")
AnnotationAssertion(ns1:domain ns1:baseSalary ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:baseSalary ns1:Number)
AnnotationAssertion(rdfs:comment ns1:baseSalary "The base salary of the job.")
AnnotationAssertion(rdfs:label ns1:baseSalary "baseSalary")
AnnotationAssertion(ns1:domain ns1:benefits ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:benefits ns1:Text)
AnnotationAssertion(rdfs:comment ns1:benefits "Description of benefits associated with the job.")
AnnotationAssertion(rdfs:label ns1:benefits "benefits")
AnnotationAssertion(ns1:domain ns1:bestRating ns1:Rating)
AnnotationAssertion(ns1:range ns1:bestRating ns1:Number)
AnnotationAssertion(ns1:range ns1:bestRating ns1:Text)
AnnotationAssertion(rdfs:comment ns1:bestRating "The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.")
AnnotationAssertion(rdfs:label ns1:bestRating "bestRating")
AnnotationAssertion(ns1:domain ns1:birthDate ns1:Person)
AnnotationAssertion(ns1:range ns1:birthDate ns1:Date)
AnnotationAssertion(rdfs:comment ns1:birthDate "Date of birth.")
AnnotationAssertion(rdfs:label ns1:birthDate "birthDate")
AnnotationAssertion(ns1:domain ns1:bitrate ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:bitrate ns1:Text)
AnnotationAssertion(rdfs:comment ns1:bitrate "The bitrate of the media object.")
AnnotationAssertion(rdfs:label ns1:bitrate "bitrate")
AnnotationAssertion(ns1:domain ns1:blogPost ns1:Blog)
AnnotationAssertion(ns1:range ns1:blogPost ns1:BlogPosting)
AnnotationAssertion(rdfs:comment ns1:blogPost "A posting that is part of this blog.")
AnnotationAssertion(rdfs:label ns1:blogPost "blogPost")
AnnotationAssertion(ns1:domain ns1:blogPosts ns1:Blog)
AnnotationAssertion(ns1:range ns1:blogPosts ns1:BlogPosting)
AnnotationAssertion(rdfs:comment ns1:blogPosts "The postings that are part of this blog (legacy spelling; see singular form, blogPost).")
AnnotationAssertion(rdfs:label ns1:blogPosts "blogPosts")
AnnotationAssertion(ns1:domain ns1:bookEdition ns1:Book)
AnnotationAssertion(ns1:range ns1:bookEdition ns1:Text)
AnnotationAssertion(rdfs:comment ns1:bookEdition "The edition of the book.")
AnnotationAssertion(rdfs:label ns1:bookEdition "bookEdition")
AnnotationAssertion(ns1:domain ns1:bookFormat ns1:Book)
AnnotationAssertion(ns1:range ns1:bookFormat ns1:BookFormatType)
AnnotationAssertion(rdfs:comment ns1:bookFormat "The format of the book.")
AnnotationAssertion(rdfs:label ns1:bookFormat "bookFormat")
AnnotationAssertion(ns1:domain ns1:box ns1:GeoShape)
AnnotationAssertion(ns1:range ns1:box ns1:Text)
AnnotationAssertion(rdfs:comment ns1:box "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more spacedelimited points where the first and final points are identical.")
AnnotationAssertion(rdfs:label ns1:box "box")
AnnotationAssertion(ns1:domain ns1:branchOf ns1:LocalBusiness)
AnnotationAssertion(ns1:range ns1:branchOf ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:branchOf "The larger organization that this local business is a branch of, if any.")
AnnotationAssertion(rdfs:label ns1:branchOf "branchOf")
AnnotationAssertion(ns1:domain ns1:brand ns1:Product)
AnnotationAssertion(ns1:range ns1:brand ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:brand "The brand of the product.")
AnnotationAssertion(rdfs:label ns1:brand "brand")
AnnotationAssertion(ns1:domain ns1:breadcrumb ns1:WebPage)
AnnotationAssertion(ns1:range ns1:breadcrumb ns1:Text)
AnnotationAssertion(rdfs:comment ns1:breadcrumb "A set of links that can help a user understand and navigate a website hierarchy.")
AnnotationAssertion(rdfs:label ns1:breadcrumb "breadcrumb")
AnnotationAssertion(ns1:domain ns1:browserRequirements ns1:WebApplication)
AnnotationAssertion(ns1:range ns1:browserRequirements ns1:Text)
AnnotationAssertion(rdfs:comment ns1:browserRequirements "Specifies browser requirements in human-readable text. For example,\"requires HTML5 support\".")
AnnotationAssertion(rdfs:label ns1:browserRequirements "browserRequirements")
AnnotationAssertion(ns1:domain ns1:byArtist ns1:MusicAlbum)
AnnotationAssertion(ns1:domain ns1:byArtist ns1:MusicRecording)
AnnotationAssertion(ns1:range ns1:byArtist ns1:MusicGroup)
AnnotationAssertion(rdfs:comment ns1:byArtist "The artist that performed this album or recording.")
AnnotationAssertion(rdfs:label ns1:byArtist "byArtist")
AnnotationAssertion(ns1:domain ns1:calories ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:calories ns1:Energy)
AnnotationAssertion(rdfs:comment ns1:calories "The number of calories")
AnnotationAssertion(rdfs:label ns1:calories "calories")
AnnotationAssertion(ns1:domain ns1:caption ns1:ImageObject)
AnnotationAssertion(ns1:domain ns1:caption ns1:VideoObject)
AnnotationAssertion(ns1:range ns1:caption ns1:Text)
AnnotationAssertion(rdfs:comment ns1:caption "The caption for this object.")
AnnotationAssertion(rdfs:label ns1:caption "caption")
AnnotationAssertion(ns1:domain ns1:carbohydrateContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:carbohydrateContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:carbohydrateContent "The number of grams of carbohydrates.")
AnnotationAssertion(rdfs:label ns1:carbohydrateContent "carbohydrateContent")
AnnotationAssertion(ns1:domain ns1:carrierRequirements ns1:MobileApplication)
AnnotationAssertion(ns1:range ns1:carrierRequirements ns1:Text)
AnnotationAssertion(rdfs:comment ns1:carrierRequirements "Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).")
AnnotationAssertion(rdfs:label ns1:carrierRequirements "carrierRequirements")
AnnotationAssertion(ns1:domain ns1:children ns1:Person)
AnnotationAssertion(ns1:range ns1:children ns1:Person)
AnnotationAssertion(rdfs:comment ns1:children "A child of the person.")
AnnotationAssertion(rdfs:label ns1:children "children")
AnnotationAssertion(ns1:domain ns1:cholesterolContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:cholesterolContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:cholesterolContent "The number of milligrams of cholesterol.")
AnnotationAssertion(rdfs:label ns1:cholesterolContent "cholesterolContent")
AnnotationAssertion(ns1:domain ns1:circle ns1:GeoShape)
AnnotationAssertion(ns1:range ns1:circle ns1:Text)
AnnotationAssertion(rdfs:comment ns1:circle "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.")
AnnotationAssertion(rdfs:label ns1:circle "circle")
AnnotationAssertion(ns1:domain ns1:colleague ns1:Person)
AnnotationAssertion(ns1:range ns1:colleague ns1:Person)
AnnotationAssertion(rdfs:comment ns1:colleague "A colleague of the person.")
AnnotationAssertion(rdfs:label ns1:colleague "colleague")
AnnotationAssertion(ns1:domain ns1:colleagues ns1:Person)
AnnotationAssertion(ns1:range ns1:colleagues ns1:Person)
AnnotationAssertion(rdfs:comment ns1:colleagues "A colleague of the person (legacy spelling; see singular form, colleague).")
AnnotationAssertion(rdfs:label ns1:colleagues "colleagues")
AnnotationAssertion(ns1:domain ns1:comment ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:comment ns1:UserComments)
AnnotationAssertion(rdfs:comment ns1:comment "Comments, typically from users, on this CreativeWork.")
AnnotationAssertion(rdfs:label ns1:comment "comment")
AnnotationAssertion(ns1:domain ns1:commentText ns1:UserComments)
AnnotationAssertion(ns1:range ns1:commentText ns1:Text)
AnnotationAssertion(rdfs:comment ns1:commentText "The text of the UserComment.")
AnnotationAssertion(rdfs:label ns1:commentText "commentText")
AnnotationAssertion(ns1:domain ns1:commentTime ns1:UserComments)
AnnotationAssertion(ns1:range ns1:commentTime ns1:Date)
AnnotationAssertion(rdfs:comment ns1:commentTime "The time at which the UserComment was made.")
AnnotationAssertion(rdfs:label ns1:commentTime "commentTime")
AnnotationAssertion(ns1:domain ns1:contactPoint ns1:Organization)
AnnotationAssertion(ns1:domain ns1:contactPoint ns1:Person)
AnnotationAssertion(ns1:range ns1:contactPoint ns1:ContactPoint)
AnnotationAssertion(rdfs:comment ns1:contactPoint "A contact point for a person or organization.")
AnnotationAssertion(rdfs:label ns1:contactPoint "contactPoint")
AnnotationAssertion(ns1:domain ns1:contactPoints ns1:Organization)
AnnotationAssertion(ns1:domain ns1:contactPoints ns1:Person)
AnnotationAssertion(ns1:range ns1:contactPoints ns1:ContactPoint)
AnnotationAssertion(rdfs:comment ns1:contactPoints "A contact point for a person or organization (legacy spelling; see singular form, contactPoint).")
AnnotationAssertion(rdfs:label ns1:contactPoints "contactPoints")
AnnotationAssertion(ns1:domain ns1:contactType ns1:ContactPoint)
AnnotationAssertion(ns1:range ns1:contactType ns1:Text)
AnnotationAssertion(rdfs:comment ns1:contactType "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.")
AnnotationAssertion(rdfs:label ns1:contactType "contactType")
AnnotationAssertion(ns1:domain ns1:containedIn ns1:Place)
AnnotationAssertion(ns1:range ns1:containedIn ns1:Place)
AnnotationAssertion(rdfs:comment ns1:containedIn "The basic containment relation between places.")
AnnotationAssertion(rdfs:label ns1:containedIn "containedIn")
AnnotationAssertion(ns1:domain ns1:contentLocation ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:contentLocation ns1:Place)
AnnotationAssertion(rdfs:comment ns1:contentLocation "The location of the content.")
AnnotationAssertion(rdfs:label ns1:contentLocation "contentLocation")
AnnotationAssertion(ns1:domain ns1:contentRating ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:contentRating ns1:Text)
AnnotationAssertion(rdfs:comment ns1:contentRating "Official rating of a piece of content—for example,'MPAA PG-13'.")
AnnotationAssertion(rdfs:label ns1:contentRating "contentRating")
AnnotationAssertion(ns1:domain ns1:contentSize ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:contentSize ns1:Text)
AnnotationAssertion(rdfs:comment ns1:contentSize "File size in (mega/kilo) bytes.")
AnnotationAssertion(rdfs:label ns1:contentSize "contentSize")
AnnotationAssertion(ns1:domain ns1:contentUrl ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:contentUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:contentUrl "Actual bytes of the media object, for example the image file or video file. (previous spelling: contentURL)")
AnnotationAssertion(rdfs:label ns1:contentUrl "contentUrl")
AnnotationAssertion(ns1:domain ns1:contributor ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:contributor ns1:Organization)
AnnotationAssertion(ns1:range ns1:contributor ns1:Person)
AnnotationAssertion(rdfs:comment ns1:contributor "A secondary contributor to the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:contributor "contributor")
AnnotationAssertion(ns1:domain ns1:cookTime ns1:Recipe)
AnnotationAssertion(ns1:range ns1:cookTime ns1:Duration)
AnnotationAssertion(rdfs:comment ns1:cookTime "The time it takes to actually cook the dish, in ISO 8601 duration format.")
AnnotationAssertion(rdfs:label ns1:cookTime "cookTime")
AnnotationAssertion(ns1:domain ns1:cookingMethod ns1:Recipe)
AnnotationAssertion(ns1:range ns1:cookingMethod ns1:Text)
AnnotationAssertion(rdfs:comment ns1:cookingMethod "The method of cooking, such as Frying, Steaming, ...")
AnnotationAssertion(rdfs:label ns1:cookingMethod "cookingMethod")
AnnotationAssertion(ns1:domain ns1:copyrightHolder ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:copyrightHolder ns1:Organization)
AnnotationAssertion(ns1:range ns1:copyrightHolder ns1:Person)
AnnotationAssertion(rdfs:comment ns1:copyrightHolder "The party holding the legal copyright to the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:copyrightHolder "copyrightHolder")
AnnotationAssertion(ns1:domain ns1:copyrightYear ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:copyrightYear ns1:Number)
AnnotationAssertion(rdfs:comment ns1:copyrightYear "The year during which the claimed copyright for the CreativeWork was first asserted.")
AnnotationAssertion(rdfs:label ns1:copyrightYear "copyrightYear")
AnnotationAssertion(ns1:domain ns1:countriesNotSupported ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:countriesNotSupported ns1:Text)
AnnotationAssertion(rdfs:comment ns1:countriesNotSupported "Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.")
AnnotationAssertion(rdfs:label ns1:countriesNotSupported "countriesNotSupported")
AnnotationAssertion(ns1:domain ns1:countriesSupported ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:countriesSupported ns1:Text)
AnnotationAssertion(rdfs:comment ns1:countriesSupported "Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.")
AnnotationAssertion(rdfs:label ns1:countriesSupported "countriesSupported")
AnnotationAssertion(ns1:domain ns1:creator ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:creator ns1:UserComments)
AnnotationAssertion(ns1:range ns1:creator ns1:Organization)
AnnotationAssertion(ns1:range ns1:creator ns1:Person)
AnnotationAssertion(rdfs:comment ns1:creator "The creator/author of this CreativeWork or UserComments. This is the same as the Author property for CreativeWork.")
AnnotationAssertion(rdfs:label ns1:creator "creator")
AnnotationAssertion(ns1:domain ns1:currenciesAccepted ns1:LocalBusiness)
AnnotationAssertion(ns1:range ns1:currenciesAccepted ns1:Text)
AnnotationAssertion(rdfs:comment ns1:currenciesAccepted "The currency accepted (in ISO 4217 currency format).")
AnnotationAssertion(rdfs:label ns1:currenciesAccepted "currenciesAccepted")
AnnotationAssertion(ns1:domain ns1:dateCreated ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:dateCreated ns1:Date)
AnnotationAssertion(rdfs:comment ns1:dateCreated "The date on which the CreativeWork was created.")
AnnotationAssertion(rdfs:label ns1:dateCreated "dateCreated")
AnnotationAssertion(ns1:domain ns1:dateModified ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:dateModified ns1:Date)
AnnotationAssertion(rdfs:comment ns1:dateModified "The date on which the CreativeWork was most recently modified.")
AnnotationAssertion(rdfs:label ns1:dateModified "dateModified")
AnnotationAssertion(ns1:domain ns1:datePosted ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:datePosted ns1:Date)
AnnotationAssertion(rdfs:comment ns1:datePosted "Publication date for the job posting.")
AnnotationAssertion(rdfs:label ns1:datePosted "datePosted")
AnnotationAssertion(ns1:domain ns1:datePublished ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:datePublished ns1:Date)
AnnotationAssertion(rdfs:comment ns1:datePublished "Date of first broadcast/publication.")
AnnotationAssertion(rdfs:label ns1:datePublished "datePublished")
AnnotationAssertion(ns1:domain ns1:dateline ns1:NewsArticle)
AnnotationAssertion(ns1:range ns1:dateline ns1:Text)
AnnotationAssertion(rdfs:comment ns1:dateline "The location where the NewsArticle was produced.")
AnnotationAssertion(rdfs:label ns1:dateline "dateline")
AnnotationAssertion(ns1:domain ns1:deathDate ns1:Person)
AnnotationAssertion(ns1:range ns1:deathDate ns1:Date)
AnnotationAssertion(rdfs:comment ns1:deathDate "Date of death.")
AnnotationAssertion(rdfs:label ns1:deathDate "deathDate")
AnnotationAssertion(ns1:domain ns1:description ns1:Thing)
AnnotationAssertion(ns1:range ns1:description ns1:Text)
AnnotationAssertion(rdfs:comment ns1:description "A short description of the item.")
AnnotationAssertion(rdfs:label ns1:description "description")
AnnotationAssertion(ns1:domain ns1:device ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:device ns1:Text)
AnnotationAssertion(rdfs:comment ns1:device "Device required to run the application. Used in cases where a specific make/model is required to run the application.")
AnnotationAssertion(rdfs:label ns1:device "device")
AnnotationAssertion(ns1:domain ns1:director ns1:Movie)
AnnotationAssertion(ns1:domain ns1:director ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:director ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:director ns1:Person)
AnnotationAssertion(rdfs:comment ns1:director "The director of the movie, TV episode, or series.")
AnnotationAssertion(rdfs:label ns1:director "director")
AnnotationAssertion(ns1:domain ns1:discusses ns1:UserComments)
AnnotationAssertion(ns1:range ns1:discusses ns1:CreativeWork)
AnnotationAssertion(rdfs:comment ns1:discusses "Specifies the CreativeWork associated with the UserComment.")
AnnotationAssertion(rdfs:label ns1:discusses "discusses")
AnnotationAssertion(ns1:domain ns1:discussionUrl ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:discussionUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:discussionUrl "A link to the page containing the comments of the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:discussionUrl "discussionUrl")
AnnotationAssertion(ns1:domain ns1:downloadUrl ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:downloadUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:downloadUrl "If the file can be downloaded, URL to download the binary.")
AnnotationAssertion(rdfs:label ns1:downloadUrl "downloadUrl")
AnnotationAssertion(ns1:domain ns1:duration ns1:Event)
AnnotationAssertion(ns1:domain ns1:duration ns1:MediaObject)
AnnotationAssertion(ns1:domain ns1:duration ns1:Movie)
AnnotationAssertion(ns1:domain ns1:duration ns1:MusicRecording)
AnnotationAssertion(ns1:range ns1:duration ns1:Duration)
AnnotationAssertion(rdfs:comment ns1:duration "The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.")
AnnotationAssertion(rdfs:label ns1:duration "duration")
AnnotationAssertion(ns1:domain ns1:editor ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:editor ns1:Person)
AnnotationAssertion(rdfs:comment ns1:editor "Specifies the Person who edited the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:editor "editor")
AnnotationAssertion(ns1:domain ns1:educationRequirements ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:educationRequirements ns1:Text)
AnnotationAssertion(rdfs:comment ns1:educationRequirements "Educational background needed for the position.")
AnnotationAssertion(rdfs:label ns1:educationRequirements "educationRequirements")
AnnotationAssertion(ns1:domain ns1:elevation ns1:GeoCoordinates)
AnnotationAssertion(ns1:domain ns1:elevation ns1:GeoShape)
AnnotationAssertion(ns1:range ns1:elevation ns1:Number)
AnnotationAssertion(ns1:range ns1:elevation ns1:Text)
AnnotationAssertion(rdfs:comment ns1:elevation "The elevation of a location.")
AnnotationAssertion(rdfs:label ns1:elevation "elevation")
AnnotationAssertion(ns1:domain ns1:email ns1:ContactPoint)
AnnotationAssertion(ns1:domain ns1:email ns1:Organization)
AnnotationAssertion(ns1:domain ns1:email ns1:Person)
AnnotationAssertion(ns1:range ns1:email ns1:Text)
AnnotationAssertion(rdfs:comment ns1:email "Email address.")
AnnotationAssertion(rdfs:label ns1:email "email")
AnnotationAssertion(ns1:domain ns1:embedUrl ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:embedUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:embedUrl "A URL pointing to a player for a specific video. In general, this is the information in the src element of an embed tag and should not be the same as the content of the loc tag. (previous spelling: embedURL)")
AnnotationAssertion(rdfs:label ns1:embedUrl "embedUrl")
AnnotationAssertion(ns1:domain ns1:employee ns1:Organization)
AnnotationAssertion(ns1:range ns1:employee ns1:Person)
AnnotationAssertion(rdfs:comment ns1:employee "Someone working for this organization.")
AnnotationAssertion(rdfs:label ns1:employee "employee")
AnnotationAssertion(ns1:domain ns1:employees ns1:Organization)
AnnotationAssertion(ns1:range ns1:employees ns1:Person)
AnnotationAssertion(rdfs:comment ns1:employees "People working for this organization. (legacy spelling; see singular form, employee)")
AnnotationAssertion(rdfs:label ns1:employees "employees")
AnnotationAssertion(ns1:domain ns1:employmentType ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:employmentType ns1:Text)
AnnotationAssertion(rdfs:comment ns1:employmentType "Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).")
AnnotationAssertion(rdfs:label ns1:employmentType "employmentType")
AnnotationAssertion(ns1:domain ns1:encodesCreativeWork ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:encodesCreativeWork ns1:CreativeWork)
AnnotationAssertion(rdfs:comment ns1:encodesCreativeWork "The creative work encoded by this media object")
AnnotationAssertion(rdfs:label ns1:encodesCreativeWork "encodesCreativeWork")
AnnotationAssertion(ns1:domain ns1:encoding ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:encoding ns1:MediaObject)
AnnotationAssertion(rdfs:comment ns1:encoding "A media object that encode this CreativeWork.")
AnnotationAssertion(rdfs:label ns1:encoding "encoding")
AnnotationAssertion(ns1:domain ns1:encodingFormat ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:encodingFormat ns1:Text)
AnnotationAssertion(rdfs:comment ns1:encodingFormat "mp3, mpeg4, etc.")
AnnotationAssertion(rdfs:label ns1:encodingFormat "encodingFormat")
AnnotationAssertion(ns1:domain ns1:encodings ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:encodings ns1:MediaObject)
AnnotationAssertion(rdfs:comment ns1:encodings "The media objects that encode this creative work (legacy spelling; see singular form, encoding).")
AnnotationAssertion(rdfs:label ns1:encodings "encodings")
AnnotationAssertion(ns1:domain ns1:endDate ns1:Event)
AnnotationAssertion(ns1:domain ns1:endDate ns1:TVSeason)
AnnotationAssertion(ns1:domain ns1:endDate ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:endDate ns1:Date)
AnnotationAssertion(rdfs:comment ns1:endDate "The end date and time of the event (in ISO 8601 date format).")
AnnotationAssertion(rdfs:label ns1:endDate "endDate")
AnnotationAssertion(ns1:domain ns1:episode ns1:TVSeason)
AnnotationAssertion(ns1:domain ns1:episode ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:episode ns1:TVEpisode)
AnnotationAssertion(rdfs:comment ns1:episode "An episode of a TV series or season.")
AnnotationAssertion(rdfs:label ns1:episode "episode")
AnnotationAssertion(ns1:domain ns1:episodeNumber ns1:TVEpisode)
AnnotationAssertion(ns1:range ns1:episodeNumber ns1:Number)
AnnotationAssertion(rdfs:comment ns1:episodeNumber "The episode number.")
AnnotationAssertion(rdfs:label ns1:episodeNumber "episodeNumber")
AnnotationAssertion(ns1:domain ns1:episodes ns1:TVSeason)
AnnotationAssertion(ns1:domain ns1:episodes ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:episodes ns1:TVEpisode)
AnnotationAssertion(rdfs:comment ns1:episodes "The episode of a TV series or season (legacy spelling; see singular form, episode).")
AnnotationAssertion(rdfs:label ns1:episodes "episodes")
AnnotationAssertion(ns1:domain ns1:event ns1:Organization)
AnnotationAssertion(ns1:domain ns1:event ns1:Place)
AnnotationAssertion(ns1:range ns1:event ns1:Event)
AnnotationAssertion(rdfs:comment ns1:event "Upcoming or past event associated with this place or organization.")
AnnotationAssertion(rdfs:label ns1:event "event")
AnnotationAssertion(ns1:domain ns1:events ns1:Organization)
AnnotationAssertion(ns1:domain ns1:events ns1:Place)
AnnotationAssertion(ns1:range ns1:events ns1:Event)
AnnotationAssertion(rdfs:comment ns1:events "Upcoming or past events associated with this place or organization (legacy spelling; see singular form, event).")
AnnotationAssertion(rdfs:label ns1:events "events")
AnnotationAssertion(ns1:domain ns1:exifData ns1:ImageObject)
AnnotationAssertion(ns1:range ns1:exifData ns1:Text)
AnnotationAssertion(rdfs:comment ns1:exifData "exif data for this object.")
AnnotationAssertion(rdfs:label ns1:exifData "exifData")
AnnotationAssertion(ns1:domain ns1:experienceRequirements ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:experienceRequirements ns1:Text)
AnnotationAssertion(rdfs:comment ns1:experienceRequirements "Description of skills and experience needed for the position.")
AnnotationAssertion(rdfs:label ns1:experienceRequirements "experienceRequirements")
AnnotationAssertion(ns1:domain ns1:expires ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:expires ns1:Date)
AnnotationAssertion(rdfs:comment ns1:expires "Date the content expires and is no longer useful or available. Useful for videos.")
AnnotationAssertion(rdfs:label ns1:expires "expires")
AnnotationAssertion(ns1:domain ns1:familyName ns1:Person)
AnnotationAssertion(ns1:range ns1:familyName ns1:Text)
AnnotationAssertion(rdfs:comment ns1:familyName "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the Name property.")
AnnotationAssertion(rdfs:label ns1:familyName "familyName")
AnnotationAssertion(ns1:domain ns1:fatContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:fatContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:fatContent "The number of grams of fat.")
AnnotationAssertion(rdfs:label ns1:fatContent "fatContent")
AnnotationAssertion(ns1:domain ns1:faxNumber ns1:ContactPoint)
AnnotationAssertion(ns1:domain ns1:faxNumber ns1:Organization)
AnnotationAssertion(ns1:domain ns1:faxNumber ns1:Person)
AnnotationAssertion(ns1:domain ns1:faxNumber ns1:Place)
AnnotationAssertion(ns1:range ns1:faxNumber ns1:Text)
AnnotationAssertion(rdfs:comment ns1:faxNumber "The fax number.")
AnnotationAssertion(rdfs:label ns1:faxNumber "faxNumber")
AnnotationAssertion(ns1:domain ns1:featureList ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:featureList ns1:Text)
AnnotationAssertion(ns1:range ns1:featureList ns1:URL)
AnnotationAssertion(rdfs:comment ns1:featureList "Features or modules provided by this application (and possibly required by other applications).")
AnnotationAssertion(rdfs:label ns1:featureList "featureList")
AnnotationAssertion(ns1:domain ns1:fiberContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:fiberContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:fiberContent "The number of grams of fiber.")
AnnotationAssertion(rdfs:label ns1:fiberContent "fiberContent")
AnnotationAssertion(ns1:domain ns1:fileFormat ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:fileFormat ns1:Text)
AnnotationAssertion(rdfs:comment ns1:fileFormat "MIME format of the binary (e.g. application/zip).")
AnnotationAssertion(rdfs:label ns1:fileFormat "fileFormat")
AnnotationAssertion(ns1:domain ns1:fileSize ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:fileSize ns1:Integer)
AnnotationAssertion(rdfs:comment ns1:fileSize "Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.")
AnnotationAssertion(rdfs:label ns1:fileSize "fileSize")
AnnotationAssertion(ns1:domain ns1:follows ns1:Person)
AnnotationAssertion(ns1:range ns1:follows ns1:Person)
AnnotationAssertion(rdfs:comment ns1:follows "The most generic uni-directional social relation.")
AnnotationAssertion(rdfs:label ns1:follows "follows")
AnnotationAssertion(ns1:domain ns1:founder ns1:Organization)
AnnotationAssertion(ns1:range ns1:founder ns1:Person)
AnnotationAssertion(rdfs:comment ns1:founder "A person who founded this organization.")
AnnotationAssertion(rdfs:label ns1:founder "founder")
AnnotationAssertion(ns1:domain ns1:founders ns1:Organization)
AnnotationAssertion(ns1:range ns1:founders ns1:Person)
AnnotationAssertion(rdfs:comment ns1:founders "A person who founded this organization (legacy spelling; see singular form, founder).")
AnnotationAssertion(rdfs:label ns1:founders "founders")
AnnotationAssertion(ns1:domain ns1:foundingDate ns1:Organization)
AnnotationAssertion(ns1:range ns1:foundingDate ns1:Date)
AnnotationAssertion(rdfs:comment ns1:foundingDate "The date that this organization was founded.")
AnnotationAssertion(rdfs:label ns1:foundingDate "foundingDate")
AnnotationAssertion(ns1:domain ns1:gender ns1:Person)
AnnotationAssertion(ns1:range ns1:gender ns1:Text)
AnnotationAssertion(rdfs:comment ns1:gender "Gender of the person.")
AnnotationAssertion(rdfs:label ns1:gender "gender")
AnnotationAssertion(ns1:domain ns1:genre ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:genre ns1:Text)
AnnotationAssertion(rdfs:comment ns1:genre "Genre of the creative work")
AnnotationAssertion(rdfs:label ns1:genre "genre")
AnnotationAssertion(ns1:domain ns1:geo ns1:Place)
AnnotationAssertion(ns1:range ns1:geo ns1:GeoCoordinates)
AnnotationAssertion(ns1:range ns1:geo ns1:GeoShape)
AnnotationAssertion(rdfs:comment ns1:geo "The geo coordinates of the place.")
AnnotationAssertion(rdfs:label ns1:geo "geo")
AnnotationAssertion(ns1:domain ns1:givenName ns1:Person)
AnnotationAssertion(ns1:range ns1:givenName ns1:Text)
AnnotationAssertion(rdfs:comment ns1:givenName "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the Name property.")
AnnotationAssertion(rdfs:label ns1:givenName "givenName")
AnnotationAssertion(ns1:domain ns1:headline ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:headline ns1:Text)
AnnotationAssertion(rdfs:comment ns1:headline "Headline of the article")
AnnotationAssertion(rdfs:label ns1:headline "headline")
AnnotationAssertion(ns1:domain ns1:height ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:height ns1:Distance)
AnnotationAssertion(rdfs:comment ns1:height "The height of the media object.")
AnnotationAssertion(rdfs:label ns1:height "height")
AnnotationAssertion(ns1:domain ns1:highPrice ns1:AggregateOffer)
AnnotationAssertion(ns1:range ns1:highPrice ns1:Number)
AnnotationAssertion(ns1:range ns1:highPrice ns1:Text)
AnnotationAssertion(rdfs:comment ns1:highPrice "The highest price of all offers available.")
AnnotationAssertion(rdfs:label ns1:highPrice "highPrice")
AnnotationAssertion(ns1:domain ns1:hiringOrganization ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:hiringOrganization ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:hiringOrganization "Organization offering the job position.")
AnnotationAssertion(rdfs:label ns1:hiringOrganization "hiringOrganization")
AnnotationAssertion(ns1:domain ns1:homeLocation ns1:Person)
AnnotationAssertion(ns1:range ns1:homeLocation ns1:ContactPoint)
AnnotationAssertion(ns1:range ns1:homeLocation ns1:Place)
AnnotationAssertion(rdfs:comment ns1:homeLocation "A contact location for a person's residence.")
AnnotationAssertion(rdfs:label ns1:homeLocation "homeLocation")
AnnotationAssertion(ns1:domain ns1:honorificPrefix ns1:Person)
AnnotationAssertion(ns1:range ns1:honorificPrefix ns1:Text)
AnnotationAssertion(rdfs:comment ns1:honorificPrefix "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.")
AnnotationAssertion(rdfs:label ns1:honorificPrefix "honorificPrefix")
AnnotationAssertion(ns1:domain ns1:honorificSuffix ns1:Person)
AnnotationAssertion(ns1:range ns1:honorificSuffix ns1:Text)
AnnotationAssertion(rdfs:comment ns1:honorificSuffix "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.")
AnnotationAssertion(rdfs:label ns1:honorificSuffix "honorificSuffix")
AnnotationAssertion(ns1:domain ns1:illustrator ns1:Book)
AnnotationAssertion(ns1:range ns1:illustrator ns1:Person)
AnnotationAssertion(rdfs:comment ns1:illustrator "The illustrator of the book.")
AnnotationAssertion(rdfs:label ns1:illustrator "illustrator")
AnnotationAssertion(ns1:domain ns1:image ns1:Thing)
AnnotationAssertion(ns1:range ns1:image ns1:URL)
AnnotationAssertion(rdfs:comment ns1:image "URL of an image of the item.")
AnnotationAssertion(rdfs:label ns1:image "image")
AnnotationAssertion(ns1:domain ns1:inAlbum ns1:MusicRecording)
AnnotationAssertion(ns1:range ns1:inAlbum ns1:MusicAlbum)
AnnotationAssertion(rdfs:comment ns1:inAlbum "The album to which this recording belongs.")
AnnotationAssertion(rdfs:label ns1:inAlbum "inAlbum")
AnnotationAssertion(ns1:domain ns1:inLanguage ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:inLanguage ns1:Text)
AnnotationAssertion(rdfs:comment ns1:inLanguage "The language of the content. please use one of the language codes from the IETF BCP 47 standard.")
AnnotationAssertion(rdfs:label ns1:inLanguage "inLanguage")
AnnotationAssertion(ns1:domain ns1:inPlaylist ns1:MusicRecording)
AnnotationAssertion(ns1:range ns1:inPlaylist ns1:MusicPlaylist)
AnnotationAssertion(rdfs:comment ns1:inPlaylist "The playlist to which this recording belongs.")
AnnotationAssertion(rdfs:label ns1:inPlaylist "inPlaylist")
AnnotationAssertion(ns1:domain ns1:incentives ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:incentives ns1:Text)
AnnotationAssertion(rdfs:comment ns1:incentives "Description of bonus and commission compensation aspects of the job.")
AnnotationAssertion(rdfs:label ns1:incentives "incentives")
AnnotationAssertion(ns1:domain ns1:industry ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:industry ns1:Text)
AnnotationAssertion(rdfs:comment ns1:industry "The industry associated with the job position.")
AnnotationAssertion(rdfs:label ns1:industry "industry")
AnnotationAssertion(ns1:domain ns1:ingredients ns1:Recipe)
AnnotationAssertion(ns1:range ns1:ingredients ns1:Text)
AnnotationAssertion(rdfs:comment ns1:ingredients "An ingredient used in the recipe.")
AnnotationAssertion(rdfs:label ns1:ingredients "ingredients")
AnnotationAssertion(ns1:domain ns1:installUrl ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:installUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:installUrl "URL at which the app may be installed, if different from the URL of the item.")
AnnotationAssertion(rdfs:label ns1:installUrl "installUrl")
AnnotationAssertion(ns1:domain ns1:interactionCount ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:interactionCount ns1:MediaObject)
AnnotationAssertion(ns1:domain ns1:interactionCount ns1:Organization)
AnnotationAssertion(ns1:domain ns1:interactionCount ns1:Person)
AnnotationAssertion(ns1:domain ns1:interactionCount ns1:Place)
AnnotationAssertion(ns1:range ns1:interactionCount ns1:Text)
AnnotationAssertion(rdfs:comment ns1:interactionCount "A count of a specific user interactions with this item—for example, 20 UserLikes, 5 UserComments, or 300 UserDownloads. The user interaction type should be one of the sub types of UserInteraction.")
AnnotationAssertion(rdfs:label ns1:interactionCount "interactionCount")
AnnotationAssertion(ns1:domain ns1:isFamilyFriendly ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:isFamilyFriendly ns1:Boolean)
AnnotationAssertion(rdfs:comment ns1:isFamilyFriendly "Indicates whether this content is family friendly.")
AnnotationAssertion(rdfs:label ns1:isFamilyFriendly "isFamilyFriendly")
AnnotationAssertion(ns1:domain ns1:isPartOf ns1:WebPage)
AnnotationAssertion(ns1:range ns1:isPartOf ns1:CollectionPage)
AnnotationAssertion(rdfs:comment ns1:isPartOf "Indicates the collection or gallery to which the item belongs.")
AnnotationAssertion(rdfs:label ns1:isPartOf "isPartOf")
AnnotationAssertion(ns1:domain ns1:isbn ns1:Book)
AnnotationAssertion(ns1:range ns1:isbn ns1:Text)
AnnotationAssertion(rdfs:comment ns1:isbn "The ISBN of the book.")
AnnotationAssertion(rdfs:label ns1:isbn "isbn")
AnnotationAssertion(ns1:domain ns1:itemCondition ns1:Offer)
AnnotationAssertion(ns1:range ns1:itemCondition ns1:OfferItemCondition)
AnnotationAssertion(rdfs:comment ns1:itemCondition "The condition of the item for sale—for example New, Refurbished, Used, etc.")
AnnotationAssertion(rdfs:label ns1:itemCondition "itemCondition")
AnnotationAssertion(ns1:domain ns1:itemListElement ns1:ItemList)
AnnotationAssertion(ns1:range ns1:itemListElement ns1:Text)
AnnotationAssertion(rdfs:comment ns1:itemListElement "A single list item.")
AnnotationAssertion(rdfs:label ns1:itemListElement "itemListElement")
AnnotationAssertion(ns1:domain ns1:itemListOrder ns1:ItemList)
AnnotationAssertion(ns1:range ns1:itemListOrder ns1:Text)
AnnotationAssertion(rdfs:comment ns1:itemListOrder "Type of ordering (e.g. Ascending, Descending, Unordered).")
AnnotationAssertion(rdfs:label ns1:itemListOrder "itemListOrder")
AnnotationAssertion(ns1:domain ns1:itemOffered ns1:Offer)
AnnotationAssertion(ns1:range ns1:itemOffered ns1:Product)
AnnotationAssertion(rdfs:comment ns1:itemOffered "The item being sold.")
AnnotationAssertion(rdfs:label ns1:itemOffered "itemOffered")
AnnotationAssertion(ns1:domain ns1:itemReviewed ns1:AggregateRating)
AnnotationAssertion(ns1:domain ns1:itemReviewed ns1:Review)
AnnotationAssertion(ns1:range ns1:itemReviewed ns1:Thing)
AnnotationAssertion(rdfs:comment ns1:itemReviewed "The item that is being reviewed/rated.")
AnnotationAssertion(rdfs:label ns1:itemReviewed "itemReviewed")
AnnotationAssertion(ns1:domain ns1:jobLocation ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:jobLocation ns1:Place)
AnnotationAssertion(rdfs:comment ns1:jobLocation "A (typically single) geographic location associated with the job position.")
AnnotationAssertion(rdfs:label ns1:jobLocation "jobLocation")
AnnotationAssertion(ns1:domain ns1:jobTitle ns1:Person)
AnnotationAssertion(ns1:range ns1:jobTitle ns1:Text)
AnnotationAssertion(rdfs:comment ns1:jobTitle "The job title of the person (for example, Financial Manager).")
AnnotationAssertion(rdfs:label ns1:jobTitle "jobTitle")
AnnotationAssertion(ns1:domain ns1:keywords ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:keywords ns1:Text)
AnnotationAssertion(rdfs:comment ns1:keywords "The keywords/tags used to describe this content.")
AnnotationAssertion(rdfs:label ns1:keywords "keywords")
AnnotationAssertion(ns1:domain ns1:knows ns1:Person)
AnnotationAssertion(ns1:range ns1:knows ns1:Person)
AnnotationAssertion(rdfs:comment ns1:knows "The most generic bi-directional social/work relation.")
AnnotationAssertion(rdfs:label ns1:knows "knows")
AnnotationAssertion(ns1:domain ns1:latitude ns1:GeoCoordinates)
AnnotationAssertion(ns1:range ns1:latitude ns1:Number)
AnnotationAssertion(ns1:range ns1:latitude ns1:Text)
AnnotationAssertion(rdfs:comment ns1:latitude "The latitude of a location. For example 37.42242.")
AnnotationAssertion(rdfs:label ns1:latitude "latitude")
AnnotationAssertion(ns1:domain ns1:line ns1:GeoShape)
AnnotationAssertion(ns1:range ns1:line ns1:Text)
AnnotationAssertion(rdfs:comment ns1:line "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.")
AnnotationAssertion(rdfs:label ns1:line "line")
AnnotationAssertion(ns1:domain ns1:location ns1:Event)
AnnotationAssertion(ns1:domain ns1:location ns1:Organization)
AnnotationAssertion(ns1:range ns1:location ns1:Place)
AnnotationAssertion(ns1:range ns1:location ns1:PostalAddress)
AnnotationAssertion(rdfs:comment ns1:location "The location of the event or organization.")
AnnotationAssertion(rdfs:label ns1:location "location")
AnnotationAssertion(ns1:domain ns1:longitude ns1:GeoCoordinates)
AnnotationAssertion(ns1:range ns1:longitude ns1:Number)
AnnotationAssertion(ns1:range ns1:longitude ns1:Text)
AnnotationAssertion(rdfs:comment ns1:longitude "The longitude of a location. For example -122.08585.")
AnnotationAssertion(rdfs:label ns1:longitude "longitude")
AnnotationAssertion(ns1:domain ns1:lowPrice ns1:AggregateOffer)
AnnotationAssertion(ns1:range ns1:lowPrice ns1:Number)
AnnotationAssertion(ns1:range ns1:lowPrice ns1:Text)
AnnotationAssertion(rdfs:comment ns1:lowPrice "The lowest price of all offers available.")
AnnotationAssertion(rdfs:label ns1:lowPrice "lowPrice")
AnnotationAssertion(ns1:domain ns1:mainContentOfPage ns1:WebPage)
AnnotationAssertion(ns1:range ns1:mainContentOfPage ns1:WebPageElement)
AnnotationAssertion(rdfs:comment ns1:mainContentOfPage "Indicates if this web page element is the main subject of the page.")
AnnotationAssertion(rdfs:label ns1:mainContentOfPage "mainContentOfPage")
AnnotationAssertion(ns1:domain ns1:manufacturer ns1:Product)
AnnotationAssertion(ns1:range ns1:manufacturer ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:manufacturer "The manufacturer of the product.")
AnnotationAssertion(rdfs:label ns1:manufacturer "manufacturer")
AnnotationAssertion(ns1:domain ns1:map ns1:Place)
AnnotationAssertion(ns1:range ns1:map ns1:URL)
AnnotationAssertion(rdfs:comment ns1:map "A URL to a map of the place.")
AnnotationAssertion(rdfs:label ns1:map "map")
AnnotationAssertion(ns1:domain ns1:maps ns1:Place)
AnnotationAssertion(ns1:range ns1:maps ns1:URL)
AnnotationAssertion(rdfs:comment ns1:maps "A URL to a map of the place (legacy spelling; see singular form, map).")
AnnotationAssertion(rdfs:label ns1:maps "maps")
AnnotationAssertion(ns1:domain ns1:member ns1:Organization)
AnnotationAssertion(ns1:range ns1:member ns1:Organization)
AnnotationAssertion(ns1:range ns1:member ns1:Person)
AnnotationAssertion(rdfs:comment ns1:member "A member of this organization.")
AnnotationAssertion(rdfs:label ns1:member "member")
AnnotationAssertion(ns1:domain ns1:memberOf ns1:Person)
AnnotationAssertion(ns1:range ns1:memberOf ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:memberOf "An organization to which the person belongs.")
AnnotationAssertion(rdfs:label ns1:memberOf "memberOf")
AnnotationAssertion(ns1:domain ns1:members ns1:Organization)
AnnotationAssertion(ns1:range ns1:members ns1:Organization)
AnnotationAssertion(ns1:range ns1:members ns1:Person)
AnnotationAssertion(rdfs:comment ns1:members "A member of this organization (legacy spelling; see singular form, member).")
AnnotationAssertion(rdfs:label ns1:members "members")
AnnotationAssertion(ns1:domain ns1:memoryRequirements ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:memoryRequirements ns1:Text)
AnnotationAssertion(ns1:range ns1:memoryRequirements ns1:URL)
AnnotationAssertion(rdfs:comment ns1:memoryRequirements "Minimum memory requirements.")
AnnotationAssertion(rdfs:label ns1:memoryRequirements "memoryRequirements")
AnnotationAssertion(ns1:domain ns1:mentions ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:mentions ns1:Thing)
AnnotationAssertion(rdfs:comment ns1:mentions "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.")
AnnotationAssertion(rdfs:label ns1:mentions "mentions")
AnnotationAssertion(ns1:domain ns1:menu ns1:FoodEstablishment)
AnnotationAssertion(ns1:range ns1:menu ns1:Text)
AnnotationAssertion(ns1:range ns1:menu ns1:URL)
AnnotationAssertion(rdfs:comment ns1:menu "Either the actual menu or a URL of the menu.")
AnnotationAssertion(rdfs:label ns1:menu "menu")
AnnotationAssertion(ns1:domain ns1:model ns1:Product)
AnnotationAssertion(ns1:range ns1:model ns1:Text)
AnnotationAssertion(rdfs:comment ns1:model "The model of the product.")
AnnotationAssertion(rdfs:label ns1:model "model")
AnnotationAssertion(ns1:domain ns1:musicBy ns1:Movie)
AnnotationAssertion(ns1:domain ns1:musicBy ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:musicBy ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:musicBy ns1:MusicGroup)
AnnotationAssertion(ns1:range ns1:musicBy ns1:Person)
AnnotationAssertion(rdfs:comment ns1:musicBy "The composer of the movie or TV soundtrack.")
AnnotationAssertion(rdfs:label ns1:musicBy "musicBy")
AnnotationAssertion(ns1:domain ns1:musicGroupMember ns1:MusicGroup)
AnnotationAssertion(ns1:range ns1:musicGroupMember ns1:Person)
AnnotationAssertion(rdfs:comment ns1:musicGroupMember "A member of the music group—for example, John, Paul, George, or Ringo.")
AnnotationAssertion(rdfs:label ns1:musicGroupMember "musicGroupMember")
AnnotationAssertion(ns1:domain ns1:name ns1:Thing)
AnnotationAssertion(ns1:range ns1:name ns1:Text)
AnnotationAssertion(rdfs:comment ns1:name "The name of the item.")
AnnotationAssertion(rdfs:label ns1:name "name")
AnnotationAssertion(ns1:domain ns1:nationality ns1:Person)
AnnotationAssertion(ns1:range ns1:nationality ns1:Country)
AnnotationAssertion(rdfs:comment ns1:nationality "Nationality of the person.")
AnnotationAssertion(rdfs:label ns1:nationality "nationality")
AnnotationAssertion(ns1:domain ns1:numTracks ns1:MusicPlaylist)
AnnotationAssertion(ns1:range ns1:numTracks ns1:Integer)
AnnotationAssertion(rdfs:comment ns1:numTracks "The number of tracks in this album or playlist.")
AnnotationAssertion(rdfs:label ns1:numTracks "numTracks")
AnnotationAssertion(ns1:domain ns1:numberOfEpisodes ns1:TVSeason)
AnnotationAssertion(ns1:domain ns1:numberOfEpisodes ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:numberOfEpisodes ns1:Number)
AnnotationAssertion(rdfs:comment ns1:numberOfEpisodes "The number of episodes in this season or series.")
AnnotationAssertion(rdfs:label ns1:numberOfEpisodes "numberOfEpisodes")
AnnotationAssertion(ns1:domain ns1:numberOfPages ns1:Book)
AnnotationAssertion(ns1:range ns1:numberOfPages ns1:Integer)
AnnotationAssertion(rdfs:comment ns1:numberOfPages "The number of pages in the book.")
AnnotationAssertion(rdfs:label ns1:numberOfPages "numberOfPages")
AnnotationAssertion(ns1:domain ns1:nutrition ns1:Recipe)
AnnotationAssertion(ns1:range ns1:nutrition ns1:NutritionInformation)
AnnotationAssertion(rdfs:comment ns1:nutrition "Nutrition information about the recipe.")
AnnotationAssertion(rdfs:label ns1:nutrition "nutrition")
AnnotationAssertion(ns1:domain ns1:occupationalCategory ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:occupationalCategory ns1:Text)
AnnotationAssertion(rdfs:comment ns1:occupationalCategory "Category or categories describing the job. Use BLS O*NET-SOC taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes textual label and formal code, with the property repeated for each applicable value.")
AnnotationAssertion(rdfs:label ns1:occupationalCategory "occupationalCategory")
AnnotationAssertion(ns1:domain ns1:offerCount ns1:AggregateOffer)
AnnotationAssertion(ns1:range ns1:offerCount ns1:Integer)
AnnotationAssertion(rdfs:comment ns1:offerCount "The number of offers for the product.")
AnnotationAssertion(rdfs:label ns1:offerCount "offerCount")
AnnotationAssertion(ns1:domain ns1:offers ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:offers ns1:Event)
AnnotationAssertion(ns1:domain ns1:offers ns1:MediaObject)
AnnotationAssertion(ns1:domain ns1:offers ns1:Product)
AnnotationAssertion(ns1:range ns1:offers ns1:Offer)
AnnotationAssertion(rdfs:comment ns1:offers "An offer to sell this item—for example, an offer to sell a product, the DVD of a movie, or tickets to an event.")
AnnotationAssertion(rdfs:label ns1:offers "offers")
AnnotationAssertion(ns1:domain ns1:openingHours ns1:CivicStructure)
AnnotationAssertion(ns1:domain ns1:openingHours ns1:LocalBusiness)
AnnotationAssertion(ns1:range ns1:openingHours ns1:Duration)
AnnotationAssertion(rdfs:comment ns1:openingHours "The opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.- Days are specified using the following two-letter combinations: Mo, Tu, We, Th, Fr, Sa, Su.- Times are specified using 24:00 time. For example, 3pm is specified as 15:00. - Here is an example: <time itemprop=\"openingHours\" datetime=\"Tu,Th 16:00-20:00\">Tuesdays and Thursdays 4-8pm</time>. - If a business is open 7 days a week, then it can be specified as <time itemprop=\"openingHours\" datetime=\"Mo-Su\">Monday through Sunday, all day</time>.")
AnnotationAssertion(rdfs:label ns1:openingHours "openingHours")
AnnotationAssertion(ns1:domain ns1:operatingSystem ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:operatingSystem ns1:Text)
AnnotationAssertion(rdfs:comment ns1:operatingSystem "Operating systems supported (Windows 7, OSX 10.6, Android 1.6).")
AnnotationAssertion(rdfs:label ns1:operatingSystem "operatingSystem")
AnnotationAssertion(ns1:domain ns1:parent ns1:Person)
AnnotationAssertion(ns1:range ns1:parent ns1:Person)
AnnotationAssertion(rdfs:comment ns1:parent "A parent of this person.")
AnnotationAssertion(rdfs:label ns1:parent "parent")
AnnotationAssertion(ns1:domain ns1:parents ns1:Person)
AnnotationAssertion(ns1:range ns1:parents ns1:Person)
AnnotationAssertion(rdfs:comment ns1:parents "A parents of the person (legacy spelling; see singular form, parent).")
AnnotationAssertion(rdfs:label ns1:parents "parents")
AnnotationAssertion(ns1:domain ns1:partOfSeason ns1:TVEpisode)
AnnotationAssertion(ns1:range ns1:partOfSeason ns1:TVSeason)
AnnotationAssertion(rdfs:comment ns1:partOfSeason "The season to which this episode belongs.")
AnnotationAssertion(rdfs:label ns1:partOfSeason "partOfSeason")
AnnotationAssertion(ns1:domain ns1:partOfTVSeries ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:partOfTVSeries ns1:TVSeason)
AnnotationAssertion(ns1:range ns1:partOfTVSeries ns1:TVSeries)
AnnotationAssertion(rdfs:comment ns1:partOfTVSeries "The TV series to which this episode or season belongs.")
AnnotationAssertion(rdfs:label ns1:partOfTVSeries "partOfTVSeries")
AnnotationAssertion(ns1:domain ns1:paymentAccepted ns1:LocalBusiness)
AnnotationAssertion(ns1:range ns1:paymentAccepted ns1:Text)
AnnotationAssertion(rdfs:comment ns1:paymentAccepted "Cash, credit card, etc.")
AnnotationAssertion(rdfs:label ns1:paymentAccepted "paymentAccepted")
AnnotationAssertion(ns1:domain ns1:performer ns1:Event)
AnnotationAssertion(ns1:range ns1:performer ns1:Organization)
AnnotationAssertion(ns1:range ns1:performer ns1:Person)
AnnotationAssertion(rdfs:comment ns1:performer "A performer at the event—for example, a presenter, musician, musical group or actor.")
AnnotationAssertion(rdfs:label ns1:performer "performer")
AnnotationAssertion(ns1:domain ns1:performerIn ns1:Person)
AnnotationAssertion(ns1:range ns1:performerIn ns1:Event)
AnnotationAssertion(rdfs:comment ns1:performerIn "Event that this person is a performer or participant in.")
AnnotationAssertion(rdfs:label ns1:performerIn "performerIn")
AnnotationAssertion(ns1:domain ns1:performers ns1:Event)
AnnotationAssertion(ns1:range ns1:performers ns1:Organization)
AnnotationAssertion(ns1:range ns1:performers ns1:Person)
AnnotationAssertion(rdfs:comment ns1:performers "The main performer or performers of the event—for example, a presenter, musician, or actor (legacy spelling; see singular form, performer).")
AnnotationAssertion(rdfs:label ns1:performers "performers")
AnnotationAssertion(ns1:domain ns1:permissions ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:permissions ns1:Text)
AnnotationAssertion(rdfs:comment ns1:permissions "Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).")
AnnotationAssertion(rdfs:label ns1:permissions "permissions")
AnnotationAssertion(ns1:domain ns1:photo ns1:Place)
AnnotationAssertion(ns1:range ns1:photo ns1:ImageObject)
AnnotationAssertion(ns1:range ns1:photo ns1:Photograph)
AnnotationAssertion(rdfs:comment ns1:photo "A photograph of this place.")
AnnotationAssertion(rdfs:label ns1:photo "photo")
AnnotationAssertion(ns1:domain ns1:photos ns1:Place)
AnnotationAssertion(ns1:range ns1:photos ns1:ImageObject)
AnnotationAssertion(ns1:range ns1:photos ns1:Photograph)
AnnotationAssertion(rdfs:comment ns1:photos "Photographs of this place (legacy spelling; see singular form, photo).")
AnnotationAssertion(rdfs:label ns1:photos "photos")
AnnotationAssertion(ns1:domain ns1:playerType ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:playerType ns1:Text)
AnnotationAssertion(rdfs:comment ns1:playerType "Player type required—for example, Flash or Silverlight.")
AnnotationAssertion(rdfs:label ns1:playerType "playerType")
AnnotationAssertion(ns1:domain ns1:polygon ns1:GeoShape)
AnnotationAssertion(ns1:range ns1:polygon ns1:Text)
AnnotationAssertion(rdfs:comment ns1:polygon "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more spacedelimited points where the first and final points are identical.")
AnnotationAssertion(rdfs:label ns1:polygon "polygon")
AnnotationAssertion(ns1:domain ns1:postOfficeBoxNumber ns1:PostalAddress)
AnnotationAssertion(ns1:range ns1:postOfficeBoxNumber ns1:Text)
AnnotationAssertion(rdfs:comment ns1:postOfficeBoxNumber "The post offce box number for PO box addresses.")
AnnotationAssertion(rdfs:label ns1:postOfficeBoxNumber "postOfficeBoxNumber")
AnnotationAssertion(ns1:domain ns1:postalCode ns1:PostalAddress)
AnnotationAssertion(ns1:range ns1:postalCode ns1:Text)
AnnotationAssertion(rdfs:comment ns1:postalCode "The postal code. For example, 94043.")
AnnotationAssertion(rdfs:label ns1:postalCode "postalCode")
AnnotationAssertion(ns1:domain ns1:prepTime ns1:Recipe)
AnnotationAssertion(ns1:range ns1:prepTime ns1:Duration)
AnnotationAssertion(rdfs:comment ns1:prepTime "The length of time it takes to prepare the recipe, in ISO 8601 duration format.")
AnnotationAssertion(rdfs:label ns1:prepTime "prepTime")
AnnotationAssertion(ns1:domain ns1:price ns1:Offer)
AnnotationAssertion(ns1:range ns1:price ns1:Number)
AnnotationAssertion(ns1:range ns1:price ns1:Text)
AnnotationAssertion(rdfs:comment ns1:price "The offer price of the product.")
AnnotationAssertion(rdfs:label ns1:price "price")
AnnotationAssertion(ns1:domain ns1:priceCurrency ns1:Offer)
AnnotationAssertion(ns1:range ns1:priceCurrency ns1:Text)
AnnotationAssertion(rdfs:comment ns1:priceCurrency "The currency (in 3-letter ISO 4217 format) of the offer price.")
AnnotationAssertion(rdfs:label ns1:priceCurrency "priceCurrency")
AnnotationAssertion(ns1:domain ns1:priceRange ns1:LocalBusiness)
AnnotationAssertion(ns1:range ns1:priceRange ns1:Text)
AnnotationAssertion(rdfs:comment ns1:priceRange "The price range of the business, for example $$$.")
AnnotationAssertion(rdfs:label ns1:priceRange "priceRange")
AnnotationAssertion(ns1:domain ns1:priceValidUntil ns1:Offer)
AnnotationAssertion(ns1:range ns1:priceValidUntil ns1:Date)
AnnotationAssertion(rdfs:comment ns1:priceValidUntil "The date after which the price is no longer available.")
AnnotationAssertion(rdfs:label ns1:priceValidUntil "priceValidUntil")
AnnotationAssertion(ns1:domain ns1:primaryImageOfPage ns1:WebPage)
AnnotationAssertion(ns1:range ns1:primaryImageOfPage ns1:ImageObject)
AnnotationAssertion(rdfs:comment ns1:primaryImageOfPage "Indicates the main image on the page")
AnnotationAssertion(rdfs:label ns1:primaryImageOfPage "primaryImageOfPage")
AnnotationAssertion(ns1:domain ns1:printColumn ns1:NewsArticle)
AnnotationAssertion(ns1:range ns1:printColumn ns1:Text)
AnnotationAssertion(rdfs:comment ns1:printColumn "The number of the column in which the NewsArticle appears in the print edition.")
AnnotationAssertion(rdfs:label ns1:printColumn "printColumn")
AnnotationAssertion(ns1:domain ns1:printEdition ns1:NewsArticle)
AnnotationAssertion(ns1:range ns1:printEdition ns1:Text)
AnnotationAssertion(rdfs:comment ns1:printEdition "The edition of the print product in which the NewsArticle appears.")
AnnotationAssertion(rdfs:label ns1:printEdition "printEdition")
AnnotationAssertion(ns1:domain ns1:printPage ns1:NewsArticle)
AnnotationAssertion(ns1:range ns1:printPage ns1:Text)
AnnotationAssertion(rdfs:comment ns1:printPage "If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).")
AnnotationAssertion(rdfs:label ns1:printPage "printPage")
AnnotationAssertion(ns1:domain ns1:printSection ns1:NewsArticle)
AnnotationAssertion(ns1:range ns1:printSection ns1:Text)
AnnotationAssertion(rdfs:comment ns1:printSection "If this NewsArticle appears in print, this field indicates the print section in which the article appeared.")
AnnotationAssertion(rdfs:label ns1:printSection "printSection")
AnnotationAssertion(ns1:domain ns1:processorRequirements ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:processorRequirements ns1:Text)
AnnotationAssertion(rdfs:comment ns1:processorRequirements "Processor architecture required to run the application (e.g. IA64).")
AnnotationAssertion(rdfs:label ns1:processorRequirements "processorRequirements")
AnnotationAssertion(ns1:domain ns1:producer ns1:Movie)
AnnotationAssertion(ns1:domain ns1:producer ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:producer ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:producer ns1:Person)
AnnotationAssertion(rdfs:comment ns1:producer "The producer of the movie, TV series, season, or episode, or video.")
AnnotationAssertion(rdfs:label ns1:producer "producer")
AnnotationAssertion(ns1:domain ns1:productID ns1:Product)
AnnotationAssertion(ns1:range ns1:productID ns1:Text)
AnnotationAssertion(rdfs:comment ns1:productID "The product identifier, such as ISBN. For example: <meta itemprop='productID' content='isbn:123-456-789'/>.")
AnnotationAssertion(rdfs:label ns1:productID "productID")
AnnotationAssertion(ns1:domain ns1:productionCompany ns1:Movie)
AnnotationAssertion(ns1:domain ns1:productionCompany ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:productionCompany ns1:TVSeries)
AnnotationAssertion(ns1:domain ns1:productionCompany ns1:VideoObject)
AnnotationAssertion(ns1:range ns1:productionCompany ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:productionCompany "The production company or studio that made the movie, TV series, season, or episode, or video.")
AnnotationAssertion(rdfs:label ns1:productionCompany "productionCompany")
AnnotationAssertion(ns1:domain ns1:proteinContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:proteinContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:proteinContent "The number of grams of protein.")
AnnotationAssertion(rdfs:label ns1:proteinContent "proteinContent")
AnnotationAssertion(ns1:domain ns1:provider ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:provider ns1:Organization)
AnnotationAssertion(ns1:range ns1:provider ns1:Person)
AnnotationAssertion(rdfs:comment ns1:provider "Specifies the Person or Organization that distributed the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:provider "provider")
AnnotationAssertion(ns1:domain ns1:publisher ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:publisher ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:publisher "The publisher of the creative work.")
AnnotationAssertion(rdfs:label ns1:publisher "publisher")
AnnotationAssertion(ns1:domain ns1:publishingPrinciples ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:publishingPrinciples ns1:URL)
AnnotationAssertion(rdfs:comment ns1:publishingPrinciples "Link to page describing the editorial principles of the organization primarily responsible for the creation of the CreativeWork.")
AnnotationAssertion(rdfs:label ns1:publishingPrinciples "publishingPrinciples")
AnnotationAssertion(ns1:domain ns1:qualifications ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:qualifications ns1:Text)
AnnotationAssertion(rdfs:comment ns1:qualifications "Specific qualifications required for this role.")
AnnotationAssertion(rdfs:label ns1:qualifications "qualifications")
AnnotationAssertion(ns1:domain ns1:ratingCount ns1:AggregateRating)
AnnotationAssertion(ns1:range ns1:ratingCount ns1:Number)
AnnotationAssertion(rdfs:comment ns1:ratingCount "The count of total number of ratings.")
AnnotationAssertion(rdfs:label ns1:ratingCount "ratingCount")
AnnotationAssertion(ns1:domain ns1:ratingValue ns1:Rating)
AnnotationAssertion(ns1:range ns1:ratingValue ns1:Text)
AnnotationAssertion(rdfs:comment ns1:ratingValue "The rating for the content.")
AnnotationAssertion(rdfs:label ns1:ratingValue "ratingValue")
AnnotationAssertion(ns1:domain ns1:recipeCategory ns1:Recipe)
AnnotationAssertion(ns1:range ns1:recipeCategory ns1:Text)
AnnotationAssertion(rdfs:comment ns1:recipeCategory "The category of the recipe—for example, appetizer, entree, etc.")
AnnotationAssertion(rdfs:label ns1:recipeCategory "recipeCategory")
AnnotationAssertion(ns1:domain ns1:recipeCuisine ns1:Recipe)
AnnotationAssertion(ns1:range ns1:recipeCuisine ns1:Text)
AnnotationAssertion(rdfs:comment ns1:recipeCuisine "The cuisine of the recipe (for example, French or Ethopian).")
AnnotationAssertion(rdfs:label ns1:recipeCuisine "recipeCuisine")
AnnotationAssertion(ns1:domain ns1:recipeInstructions ns1:Recipe)
AnnotationAssertion(ns1:range ns1:recipeInstructions ns1:Text)
AnnotationAssertion(rdfs:comment ns1:recipeInstructions "The steps to make the dish.")
AnnotationAssertion(rdfs:label ns1:recipeInstructions "recipeInstructions")
AnnotationAssertion(ns1:domain ns1:recipeYield ns1:Recipe)
AnnotationAssertion(ns1:range ns1:recipeYield ns1:Text)
AnnotationAssertion(rdfs:comment ns1:recipeYield "The quantity produced by the recipe (for example, number of people served, number of servings, etc).")
AnnotationAssertion(rdfs:label ns1:recipeYield "recipeYield")
AnnotationAssertion(ns1:domain ns1:regionsAllowed ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:regionsAllowed ns1:Place)
AnnotationAssertion(rdfs:comment ns1:regionsAllowed "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in ISO 3166 format.")
AnnotationAssertion(rdfs:label ns1:regionsAllowed "regionsAllowed")
AnnotationAssertion(ns1:domain ns1:relatedTo ns1:Person)
AnnotationAssertion(ns1:range ns1:relatedTo ns1:Person)
AnnotationAssertion(rdfs:comment ns1:relatedTo "The most generic familial relation.")
AnnotationAssertion(rdfs:label ns1:relatedTo "relatedTo")
AnnotationAssertion(ns1:domain ns1:releaseNotes ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:releaseNotes ns1:Text)
AnnotationAssertion(ns1:range ns1:releaseNotes ns1:URL)
AnnotationAssertion(rdfs:comment ns1:releaseNotes "Description of what changed in this version.")
AnnotationAssertion(rdfs:label ns1:releaseNotes "releaseNotes")
AnnotationAssertion(ns1:domain ns1:replyToUrl ns1:UserComments)
AnnotationAssertion(ns1:range ns1:replyToUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:replyToUrl "The URL at which a reply may be posted to the specified UserComment.")
AnnotationAssertion(rdfs:label ns1:replyToUrl "replyToUrl")
AnnotationAssertion(ns1:domain ns1:representativeOfPage ns1:ImageObject)
AnnotationAssertion(ns1:range ns1:representativeOfPage ns1:Boolean)
AnnotationAssertion(rdfs:comment ns1:representativeOfPage "Indicates whether this image is representative of the content of the page.")
AnnotationAssertion(rdfs:label ns1:representativeOfPage "representativeOfPage")
AnnotationAssertion(ns1:domain ns1:requirements ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:requirements ns1:Text)
AnnotationAssertion(ns1:range ns1:requirements ns1:URL)
AnnotationAssertion(rdfs:comment ns1:requirements "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).")
AnnotationAssertion(rdfs:label ns1:requirements "requirements")
AnnotationAssertion(ns1:domain ns1:requiresSubscription ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:requiresSubscription ns1:Boolean)
AnnotationAssertion(rdfs:comment ns1:requiresSubscription "Indicates if use of the media require a subscription  (either paid or free). Allowed values are yes or no.")
AnnotationAssertion(rdfs:label ns1:requiresSubscription "requiresSubscription")
AnnotationAssertion(ns1:domain ns1:responsibilities ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:responsibilities ns1:Text)
AnnotationAssertion(rdfs:comment ns1:responsibilities "Responsibilities associated with this role.")
AnnotationAssertion(rdfs:label ns1:responsibilities "responsibilities")
AnnotationAssertion(ns1:domain ns1:review ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:review ns1:Offer)
AnnotationAssertion(ns1:domain ns1:review ns1:Organization)
AnnotationAssertion(ns1:domain ns1:review ns1:Place)
AnnotationAssertion(ns1:domain ns1:review ns1:Product)
AnnotationAssertion(ns1:range ns1:review ns1:Review)
AnnotationAssertion(rdfs:comment ns1:review "A review of the item.")
AnnotationAssertion(rdfs:label ns1:review "review")
AnnotationAssertion(ns1:domain ns1:reviewBody ns1:Review)
AnnotationAssertion(ns1:range ns1:reviewBody ns1:Text)
AnnotationAssertion(rdfs:comment ns1:reviewBody "The actual body of the review")
AnnotationAssertion(rdfs:label ns1:reviewBody "reviewBody")
AnnotationAssertion(ns1:domain ns1:reviewCount ns1:AggregateRating)
AnnotationAssertion(ns1:range ns1:reviewCount ns1:Number)
AnnotationAssertion(rdfs:comment ns1:reviewCount "The count of total number of reviews.")
AnnotationAssertion(rdfs:label ns1:reviewCount "reviewCount")
AnnotationAssertion(ns1:domain ns1:reviewRating ns1:Review)
AnnotationAssertion(ns1:range ns1:reviewRating ns1:Rating)
AnnotationAssertion(rdfs:comment ns1:reviewRating "The rating given in this review. Note that reviews can themselves be rated. The reviewRating applies to rating given by the review. The aggregateRating property applies to the review itself, as a creative work.")
AnnotationAssertion(rdfs:label ns1:reviewRating "reviewRating")
AnnotationAssertion(ns1:domain ns1:reviews ns1:CreativeWork)
AnnotationAssertion(ns1:domain ns1:reviews ns1:Offer)
AnnotationAssertion(ns1:domain ns1:reviews ns1:Organization)
AnnotationAssertion(ns1:domain ns1:reviews ns1:Place)
AnnotationAssertion(ns1:domain ns1:reviews ns1:Product)
AnnotationAssertion(ns1:range ns1:reviews ns1:Review)
AnnotationAssertion(rdfs:comment ns1:reviews "Review of the item (legacy spelling; see singular form, review).")
AnnotationAssertion(rdfs:label ns1:reviews "reviews")
AnnotationAssertion(ns1:domain ns1:salaryCurrency ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:salaryCurrency ns1:Text)
AnnotationAssertion(rdfs:comment ns1:salaryCurrency "The currency (coded using ISO 4217, http://en.wikipedia.org/wiki/ISO_4217 used for the main salary information in this job posting.")
AnnotationAssertion(rdfs:label ns1:salaryCurrency "salaryCurrency")
AnnotationAssertion(ns1:domain ns1:saturatedFatContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:saturatedFatContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:saturatedFatContent "The number of grams of saturated fat.")
AnnotationAssertion(rdfs:label ns1:saturatedFatContent "saturatedFatContent")
AnnotationAssertion(ns1:domain ns1:screenshot ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:screenshot ns1:ImageObject)
AnnotationAssertion(ns1:range ns1:screenshot ns1:URL)
AnnotationAssertion(rdfs:comment ns1:screenshot "A link to a screenshot image of the app.")
AnnotationAssertion(rdfs:label ns1:screenshot "screenshot")
AnnotationAssertion(ns1:domain ns1:season ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:season ns1:TVSeason)
AnnotationAssertion(rdfs:comment ns1:season "A season of a TV series.")
AnnotationAssertion(rdfs:label ns1:season "season")
AnnotationAssertion(ns1:domain ns1:seasonNumber ns1:TVSeason)
AnnotationAssertion(ns1:range ns1:seasonNumber ns1:Integer)
AnnotationAssertion(rdfs:comment ns1:seasonNumber "The season number.")
AnnotationAssertion(rdfs:label ns1:seasonNumber "seasonNumber")
AnnotationAssertion(ns1:domain ns1:seasons ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:seasons ns1:TVSeason)
AnnotationAssertion(rdfs:comment ns1:seasons "The seasons of the TV series (legacy spelling; see singular form, season).")
AnnotationAssertion(rdfs:label ns1:seasons "seasons")
AnnotationAssertion(ns1:domain ns1:seller ns1:Offer)
AnnotationAssertion(ns1:range ns1:seller ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:seller "The seller of the product.")
AnnotationAssertion(rdfs:label ns1:seller "seller")
AnnotationAssertion(ns1:domain ns1:servesCuisine ns1:FoodEstablishment)
AnnotationAssertion(ns1:range ns1:servesCuisine ns1:Text)
AnnotationAssertion(rdfs:comment ns1:servesCuisine "The cuisine of the restaurant.")
AnnotationAssertion(rdfs:label ns1:servesCuisine "servesCuisine")
AnnotationAssertion(ns1:domain ns1:servingSize ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:servingSize ns1:Text)
AnnotationAssertion(rdfs:comment ns1:servingSize "The serving size, in terms of the number of volume or mass")
AnnotationAssertion(rdfs:label ns1:servingSize "servingSize")
AnnotationAssertion(ns1:domain ns1:sibling ns1:Person)
AnnotationAssertion(ns1:range ns1:sibling ns1:Person)
AnnotationAssertion(rdfs:comment ns1:sibling "A sibling of the person.")
AnnotationAssertion(rdfs:label ns1:sibling "sibling")
AnnotationAssertion(ns1:domain ns1:siblings ns1:Person)
AnnotationAssertion(ns1:range ns1:siblings ns1:Person)
AnnotationAssertion(rdfs:comment ns1:siblings "A sibling of the person (legacy spelling; see singular form, sibling).")
AnnotationAssertion(rdfs:label ns1:siblings "siblings")
AnnotationAssertion(ns1:domain ns1:significantLink ns1:WebPage)
AnnotationAssertion(ns1:range ns1:significantLink ns1:URL)
AnnotationAssertion(rdfs:comment ns1:significantLink "One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.")
AnnotationAssertion(rdfs:label ns1:significantLink "significantLink")
AnnotationAssertion(ns1:domain ns1:significantLinks ns1:WebPage)
AnnotationAssertion(ns1:range ns1:significantLinks ns1:URL)
AnnotationAssertion(rdfs:comment ns1:significantLinks "The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most (legacy spelling; see singular form, significantLink).")
AnnotationAssertion(rdfs:label ns1:significantLinks "significantLinks")
AnnotationAssertion(ns1:domain ns1:skills ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:skills ns1:Text)
AnnotationAssertion(rdfs:comment ns1:skills "Skills required to fulfill this role.")
AnnotationAssertion(rdfs:label ns1:skills "skills")
AnnotationAssertion(ns1:domain ns1:sodiumContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:sodiumContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:sodiumContent "The number of milligrams of sodium.")
AnnotationAssertion(rdfs:label ns1:sodiumContent "sodiumContent")
AnnotationAssertion(ns1:domain ns1:softwareVersion ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:softwareVersion ns1:Text)
AnnotationAssertion(rdfs:comment ns1:softwareVersion "Version of the software instance.")
AnnotationAssertion(rdfs:label ns1:softwareVersion "softwareVersion")
AnnotationAssertion(ns1:domain ns1:sourceOrganization ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:sourceOrganization ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:sourceOrganization "The Organization on whose behalf the creator was working.")
AnnotationAssertion(rdfs:label ns1:sourceOrganization "sourceOrganization")
AnnotationAssertion(ns1:domain ns1:specialCommitments ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:specialCommitments ns1:Text)
AnnotationAssertion(rdfs:comment ns1:specialCommitments "Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.")
AnnotationAssertion(rdfs:label ns1:specialCommitments "specialCommitments")
AnnotationAssertion(ns1:domain ns1:spouse ns1:Person)
AnnotationAssertion(ns1:range ns1:spouse ns1:Person)
AnnotationAssertion(rdfs:comment ns1:spouse "The person's spouse.")
AnnotationAssertion(rdfs:label ns1:spouse "spouse")
AnnotationAssertion(ns1:domain ns1:startDate ns1:Event)
AnnotationAssertion(ns1:domain ns1:startDate ns1:TVSeason)
AnnotationAssertion(ns1:domain ns1:startDate ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:startDate ns1:Date)
AnnotationAssertion(rdfs:comment ns1:startDate "The start date and time of the event (in ISO 8601 date format).")
AnnotationAssertion(rdfs:label ns1:startDate "startDate")
AnnotationAssertion(ns1:domain ns1:storageRequirements ns1:SoftwareApplication)
AnnotationAssertion(ns1:range ns1:storageRequirements ns1:Text)
AnnotationAssertion(ns1:range ns1:storageRequirements ns1:URL)
AnnotationAssertion(rdfs:comment ns1:storageRequirements "Storage requirements (free space required).")
AnnotationAssertion(rdfs:label ns1:storageRequirements "storageRequirements")
AnnotationAssertion(ns1:domain ns1:streetAddress ns1:PostalAddress)
AnnotationAssertion(ns1:range ns1:streetAddress ns1:Text)
AnnotationAssertion(rdfs:comment ns1:streetAddress "The street address. For example, 1600 Amphitheatre Pkwy.")
AnnotationAssertion(rdfs:label ns1:streetAddress "streetAddress")
AnnotationAssertion(ns1:domain ns1:subEvent ns1:Event)
AnnotationAssertion(ns1:range ns1:subEvent ns1:Event)
AnnotationAssertion(rdfs:comment ns1:subEvent "An Event that is part of this event. For example, a conference event includes many presentations, each are a subEvent of the conference.")
AnnotationAssertion(rdfs:label ns1:subEvent "subEvent")
AnnotationAssertion(ns1:domain ns1:subEvents ns1:Event)
AnnotationAssertion(ns1:range ns1:subEvents ns1:Event)
AnnotationAssertion(rdfs:comment ns1:subEvents "Events that are a part of this event. For example, a conference event includes many presentations, each are subEvents of the conference (legacy spelling; see singular form, subEvent).")
AnnotationAssertion(rdfs:label ns1:subEvents "subEvents")
AnnotationAssertion(ns1:domain ns1:sugarContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:sugarContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:sugarContent "The number of grams of sugar.")
AnnotationAssertion(rdfs:label ns1:sugarContent "sugarContent")
AnnotationAssertion(ns1:domain ns1:superEvent ns1:Event)
AnnotationAssertion(ns1:range ns1:superEvent ns1:Event)
AnnotationAssertion(rdfs:comment ns1:superEvent "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.")
AnnotationAssertion(rdfs:label ns1:superEvent "superEvent")
AnnotationAssertion(ns1:domain ns1:telephone ns1:ContactPoint)
AnnotationAssertion(ns1:domain ns1:telephone ns1:Organization)
AnnotationAssertion(ns1:domain ns1:telephone ns1:Person)
AnnotationAssertion(ns1:domain ns1:telephone ns1:Place)
AnnotationAssertion(ns1:range ns1:telephone ns1:Text)
AnnotationAssertion(rdfs:comment ns1:telephone "The telephone number.")
AnnotationAssertion(rdfs:label ns1:telephone "telephone")
AnnotationAssertion(ns1:domain ns1:text ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:text ns1:Text)
AnnotationAssertion(rdfs:comment ns1:text "The textual content of this CreativeWork.")
AnnotationAssertion(rdfs:label ns1:text "text")
AnnotationAssertion(ns1:domain ns1:thumbnail ns1:ImageObject)
AnnotationAssertion(ns1:domain ns1:thumbnail ns1:VideoObject)
AnnotationAssertion(ns1:range ns1:thumbnail ns1:ImageObject)
AnnotationAssertion(rdfs:comment ns1:thumbnail "Thumbnail image for an image or video.")
AnnotationAssertion(rdfs:label ns1:thumbnail "thumbnail")
AnnotationAssertion(ns1:domain ns1:thumbnailUrl ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:thumbnailUrl ns1:URL)
AnnotationAssertion(rdfs:comment ns1:thumbnailUrl "A thumbnail image relevant to the Thing.")
AnnotationAssertion(rdfs:label ns1:thumbnailUrl "thumbnailUrl")
AnnotationAssertion(ns1:domain ns1:tickerSymbol ns1:Corporation)
AnnotationAssertion(ns1:range ns1:tickerSymbol ns1:Text)
AnnotationAssertion(rdfs:comment ns1:tickerSymbol "The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we reccommend using the controlled vocaulary of Market Identifier Codes (MIC) specified in ISO15022.")
AnnotationAssertion(rdfs:label ns1:tickerSymbol "tickerSymbol")
AnnotationAssertion(ns1:domain ns1:title ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:title ns1:Text)
AnnotationAssertion(rdfs:comment ns1:title "The title of the job.")
AnnotationAssertion(rdfs:label ns1:title "title")
AnnotationAssertion(ns1:domain ns1:totalTime ns1:Recipe)
AnnotationAssertion(ns1:range ns1:totalTime ns1:Duration)
AnnotationAssertion(rdfs:comment ns1:totalTime "The total time it takes to prepare and cook the recipe, in ISO 8601 duration format.")
AnnotationAssertion(rdfs:label ns1:totalTime "totalTime")
AnnotationAssertion(ns1:domain ns1:track ns1:MusicGroup)
AnnotationAssertion(ns1:domain ns1:track ns1:MusicPlaylist)
AnnotationAssertion(ns1:range ns1:track ns1:MusicRecording)
AnnotationAssertion(rdfs:comment ns1:track "A music recording (track)—usually a single song.")
AnnotationAssertion(rdfs:label ns1:track "track")
AnnotationAssertion(ns1:domain ns1:tracks ns1:MusicGroup)
AnnotationAssertion(ns1:domain ns1:tracks ns1:MusicPlaylist)
AnnotationAssertion(ns1:range ns1:tracks ns1:MusicRecording)
AnnotationAssertion(rdfs:comment ns1:tracks "A music recording (track)—usually a single song (legacy spelling; see singular form, track).")
AnnotationAssertion(rdfs:label ns1:tracks "tracks")
AnnotationAssertion(ns1:domain ns1:trailer ns1:Movie)
AnnotationAssertion(ns1:domain ns1:trailer ns1:TVEpisode)
AnnotationAssertion(ns1:domain ns1:trailer ns1:TVSeason)
AnnotationAssertion(ns1:domain ns1:trailer ns1:TVSeries)
AnnotationAssertion(ns1:range ns1:trailer ns1:VideoObject)
AnnotationAssertion(rdfs:comment ns1:trailer "The trailer of the movie or TV series, season, or episode.")
AnnotationAssertion(rdfs:label ns1:trailer "trailer")
AnnotationAssertion(ns1:domain ns1:transFatContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:transFatContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:transFatContent "The number of grams of trans fat.")
AnnotationAssertion(rdfs:label ns1:transFatContent "transFatContent")
AnnotationAssertion(ns1:domain ns1:transcript ns1:AudioObject)
AnnotationAssertion(ns1:domain ns1:transcript ns1:VideoObject)
AnnotationAssertion(ns1:range ns1:transcript ns1:Text)
AnnotationAssertion(rdfs:comment ns1:transcript "If this MediaObject is an AudioObject or VideoObject, the transcript of that object.")
AnnotationAssertion(rdfs:label ns1:transcript "transcript")
AnnotationAssertion(ns1:domain ns1:unsaturatedFatContent ns1:NutritionInformation)
AnnotationAssertion(ns1:range ns1:unsaturatedFatContent ns1:Mass)
AnnotationAssertion(rdfs:comment ns1:unsaturatedFatContent "The number of grams of unsaturated fat.")
AnnotationAssertion(rdfs:label ns1:unsaturatedFatContent "unsaturatedFatContent")
AnnotationAssertion(ns1:domain ns1:uploadDate ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:uploadDate ns1:Date)
AnnotationAssertion(rdfs:comment ns1:uploadDate "Date when this media object was uploaded to this site.")
AnnotationAssertion(rdfs:label ns1:uploadDate "uploadDate")
AnnotationAssertion(ns1:domain ns1:url ns1:Thing)
AnnotationAssertion(ns1:range ns1:url ns1:URL)
AnnotationAssertion(rdfs:comment ns1:url "URL of the item.")
AnnotationAssertion(rdfs:label ns1:url "url")
AnnotationAssertion(ns1:domain ns1:version ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:version ns1:Number)
AnnotationAssertion(rdfs:comment ns1:version "The version of the CreativeWork embodied by a specified resource.")
AnnotationAssertion(rdfs:label ns1:version "version")
AnnotationAssertion(ns1:domain ns1:video ns1:CreativeWork)
AnnotationAssertion(ns1:range ns1:video ns1:VideoObject)
AnnotationAssertion(rdfs:comment ns1:video "An embedded video object.")
AnnotationAssertion(rdfs:label ns1:video "video")
AnnotationAssertion(ns1:domain ns1:videoFrameSize ns1:VideoObject)
AnnotationAssertion(ns1:range ns1:videoFrameSize ns1:Text)
AnnotationAssertion(rdfs:comment ns1:videoFrameSize "The frame size of the video.")
AnnotationAssertion(rdfs:label ns1:videoFrameSize "videoFrameSize")
AnnotationAssertion(ns1:domain ns1:videoQuality ns1:VideoObject)
AnnotationAssertion(ns1:range ns1:videoQuality ns1:Text)
AnnotationAssertion(rdfs:comment ns1:videoQuality "The quality of the video.")
AnnotationAssertion(rdfs:label ns1:videoQuality "videoQuality")
AnnotationAssertion(ns1:domain ns1:width ns1:MediaObject)
AnnotationAssertion(ns1:range ns1:width ns1:Distance)
AnnotationAssertion(rdfs:comment ns1:width "The width of the media object.")
AnnotationAssertion(rdfs:label ns1:width "width")
AnnotationAssertion(ns1:domain ns1:wordCount ns1:Article)
AnnotationAssertion(ns1:range ns1:wordCount ns1:Integer)
AnnotationAssertion(rdfs:comment ns1:wordCount "The number of words in the text of the Article.")
AnnotationAssertion(rdfs:label ns1:wordCount "wordCount")
AnnotationAssertion(ns1:domain ns1:workHours ns1:JobPosting)
AnnotationAssertion(ns1:range ns1:workHours ns1:Text)
AnnotationAssertion(rdfs:comment ns1:workHours "The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).")
AnnotationAssertion(rdfs:label ns1:workHours "workHours")
AnnotationAssertion(ns1:domain ns1:workLocation ns1:Person)
AnnotationAssertion(ns1:range ns1:workLocation ns1:ContactPoint)
AnnotationAssertion(ns1:range ns1:workLocation ns1:Place)
AnnotationAssertion(rdfs:comment ns1:workLocation "A contact location for a person's place of work.")
AnnotationAssertion(rdfs:label ns1:workLocation "workLocation")
AnnotationAssertion(ns1:domain ns1:worksFor ns1:Person)
AnnotationAssertion(ns1:range ns1:worksFor ns1:Organization)
AnnotationAssertion(rdfs:comment ns1:worksFor "Organizations that the person works for.")
AnnotationAssertion(rdfs:label ns1:worksFor "worksFor")
AnnotationAssertion(ns1:domain ns1:worstRating ns1:Rating)
AnnotationAssertion(ns1:range ns1:worstRating ns1:Number)
AnnotationAssertion(ns1:range ns1:worstRating ns1:Text)
AnnotationAssertion(rdfs:comment ns1:worstRating "The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.")
AnnotationAssertion(rdfs:label ns1:worstRating "worstRating")
)